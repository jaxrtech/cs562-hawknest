!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
$(ASMTESTS)	Makefile	/^$(ASMTESTS): $(BIN_DIR)\/%: $(TEST_BUILD_DIR)\/%.o $(LD65_NOCRT_CFG)$/;"	t
$(BIN_DIR)/%	Makefile	/^$(ASMTESTS): $(BIN_DIR)\/%: $(TEST_BUILD_DIR)\/%.o $(LD65_NOCRT_CFG)$/;"	t
$(BIN_DIR)/%	Makefile	/^$(CTESTS): $(BIN_DIR)\/%: $(TEST_BUILD_DIR)\/%.o $(LIB) $(LD65_CFG)$/;"	t
$(BUILD_DIR)/%.o	Makefile	/^$(LIB_ASMOBJ) $(TEST_ASMOBJ): $(BUILD_DIR)\/%.o: %.s$/;"	t
$(BUILD_DIR)/%.o	Makefile	/^$(LIB_COBJ) $(TEST_COBJ): $(BUILD_DIR)\/%.o: $(BUILD_DIR)\/%.s$/;"	t
$(BUILD_DIR)/%.s	Makefile	/^$(LIB_CASM) $(TEST_CASM): $(BUILD_DIR)\/%.s: %.c$/;"	t
$(CTESTS)	Makefile	/^$(CTESTS): $(BIN_DIR)\/%: $(TEST_BUILD_DIR)\/%.o $(LIB) $(LD65_CFG)$/;"	t
$(EMU)	Makefile	/^$(EMU): $(EMU_OBJ)$/;"	t
$(EMU_BUILD_DIR)/%.o	Makefile	/^$(EMU_OBJ): $(EMU_BUILD_DIR)\/%.o: $(EMU_SRC_DIR)\/%.c$/;"	t
$(EMU_OBJ)	Makefile	/^$(EMU_OBJ): $(EMU_BUILD_DIR)\/%.o: $(EMU_SRC_DIR)\/%.c$/;"	t
$(LIB)	Makefile	/^$(LIB): $(LIB_OBJ)$/;"	t
$(LIB_ASMOBJ)	Makefile	/^$(LIB_ASMOBJ) $(TEST_ASMOBJ): $(BUILD_DIR)\/%.o: %.s$/;"	t
$(LIB_CASM)	Makefile	/^$(LIB_CASM) $(TEST_CASM): $(BUILD_DIR)\/%.s: %.c$/;"	t
$(LIB_COBJ)	Makefile	/^$(LIB_COBJ) $(TEST_COBJ): $(BUILD_DIR)\/%.o: $(BUILD_DIR)\/%.s$/;"	t
$(TEST_ASMOBJ)	Makefile	/^$(LIB_ASMOBJ) $(TEST_ASMOBJ): $(BUILD_DIR)\/%.o: %.s$/;"	t
$(TEST_CASM)	Makefile	/^$(LIB_CASM) $(TEST_CASM): $(BUILD_DIR)\/%.s: %.c$/;"	t
$(TEST_COBJ)	Makefile	/^$(LIB_COBJ) $(TEST_COBJ): $(BUILD_DIR)\/%.o: $(BUILD_DIR)\/%.s$/;"	t
AR65_EXEC	Makefile	/^AR65_EXEC = $(CC65_PREFIX)\/ar65$/;"	m
AR65_EXEC	Makefile	/^AR65_EXEC = ar65$/;"	m
ASMTESTS	Makefile	/^ASMTESTS = $(addprefix $(BIN_DIR)\/,$(patsubst %.s,%,$(filter %.s, $(TEST_SRC))))$/;"	m
ASSERT	emu/include/base.h	/^#define ASSERT(/;"	d
ASSERT_ASSUMPTION	emu/include/base.h	/^#	define ASSERT_ASSUMPTION(/;"	d
ASSERT_CHECK	emu/include/base.h	/^#	define ASSERT_CHECK(/;"	d
ASSERT_ERROR_REACTION	emu/include/base.h	/^#	define ASSERT_ERROR_REACTION(/;"	d
BASELIB	Makefile	/^BASELIB = sim6502.lib$/;"	m
BGREEN	emu/include/base.h	/^#define BGREEN(/;"	d
BIN_DIR	Makefile	/^BIN_DIR = bin$/;"	m
BLACK	emu/include/base.h	/^#define BLACK(/;"	d
BLUE	emu/include/base.h	/^#define BLUE(/;"	d
BOLD	emu/include/base.h	/^#define BOLD(/;"	d
BP_L1_IDX	emu/shell.c	/^#define BP_L1_IDX(/;"	d	file:
BP_L2_IDX	emu/shell.c	/^#define BP_L2_IDX(/;"	d	file:
BP_PRESENT	emu/shell.c	/^#define BP_PRESENT(/;"	d	file:
BP_SET_NOT_PRESENT	emu/shell.c	/^#define BP_SET_NOT_PRESENT(/;"	d	file:
BP_SET_PRESENT	emu/shell.c	/^#define BP_SET_PRESENT(/;"	d	file:
BRBLACK	emu/include/base.h	/^#define BRBLACK(/;"	d
BRBLUE	emu/include/base.h	/^#define BRBLUE(/;"	d
BRCYAN	emu/include/base.h	/^#define BRCYAN(/;"	d
BRMAGENTA	emu/include/base.h	/^#define BRMAGENTA(/;"	d
BRRED	emu/include/base.h	/^#define BRRED(/;"	d
BRWHTIE	emu/include/base.h	/^#define BRWHTIE(/;"	d
BRYELLOW	emu/include/base.h	/^#define BRYELLOW(/;"	d
BUILD_DIR	Makefile	/^BUILD_DIR = build$/;"	m
BuildTest	test/test.py	/^class BuildTest(Test):$/;"	c
CA65_EXEC	Makefile	/^CA65_EXEC = $(CC65_PREFIX)\/ca65$/;"	m
CA65_EXEC	Makefile	/^CA65_EXEC = ca65$/;"	m
CC65_EXEC	Makefile	/^CC65_EXEC = $(CC65_PREFIX)\/cc65$/;"	m
CC65_EXEC	Makefile	/^CC65_EXEC = cc65$/;"	m
CC_ARCH_FLAG	Makefile	/^CC_ARCH_FLAG = -march=native$/;"	m
CC_COMMAND	Makefile	/^CC_COMMAND = $(CC_EXEC) $(CC_FLAGS)$/;"	m
CC_COMMON_DEFINES	Makefile	/^CC_COMMON_DEFINES := GNU_SOURCE ASSERT_RECOVER UNREACHABLE_RECOVER$/;"	m
CC_COMMON_FLAGS	Makefile	/^CC_COMMON_FLAGS = $(CC_WARNING_FLAGS) $(CC_STD_FLAG) $(CC_DEFINES_FLAGS) $(CC_INCLUDE_FLAG) $(CC/;"	m
CC_DEBUG_DEFINES	Makefile	/^CC_DEBUG_DEFINES := DEBUG_ENABLE$/;"	m
CC_DEBUG_FLAGS	Makefile	/^CC_DEBUG_FLAGS = $(CC_COMMON_FLAGS) $(CC_SANITIZER_FLAGS) -g -O1 -fno-inline -fno-omit-frame-poi/;"	m
CC_DEFINES	Makefile	/^CC_DEFINES = $(CC_COMMON_DEFINES) $(CC_$(MODE)_DEFINES)$/;"	m
CC_DEFINES_FLAGS	Makefile	/^CC_DEFINES_FLAGS = $(addprefix -D,$(CC_DEFINES))$/;"	m
CC_EXEC	Makefile	/^CC_EXEC = $($(COMPILER)_EXEC)$/;"	m
CC_FLAGS	Makefile	/^CC_FLAGS = $(CC_$(MODE)_FLAGS)$/;"	m
CC_INCLUDE_FLAG	Makefile	/^CC_INCLUDE_FLAG = -I$(EMU_INCLUDE_DIR)$/;"	m
CC_LIB_FLAGS	Makefile	/^CC_LIB_FLAGS = $(addprefix -l,$(EMU_LIBS))$/;"	m
CC_LTO_FLAG	Makefile	/^CC_LTO_FLAG = -flto$/;"	m
CC_OPT_DEFINES	Makefile	/^CC_OPT_DEFINES :=$/;"	m
CC_OPT_FLAGS	Makefile	/^CC_OPT_FLAGS = $(CC_COMMON_FLAGS) $(CC_SANITIZER_FLAGS) -g -O3$/;"	m
CC_RELEASE_DEFINES	Makefile	/^CC_RELEASE_DEFINES := ASSERT_ASSUME UNREACHABLE_ASSUME DISABLE_CYCLECHECK$/;"	m
CC_RELEASE_FLAGS	Makefile	/^CC_RELEASE_FLAGS = $(CC_COMMON_FLAGS) $(CC_LTO_FLAG) -g -O3$/;"	m
CC_SANITIZER_FLAGS	Makefile	/^CC_SANITIZER_FLAGS = $(COMMON_SANITIZER_FLAGS) $($(COMPILER)_SANITIZER_FLAGS)$/;"	m
CC_STD_FLAG	Makefile	/^CC_STD_FLAG = -std=gnu11$/;"	m
CC_WARNING_FLAGS	Makefile	/^CC_WARNING_FLAGS = $($(COMPILER)_WARNING_FLAGS)$/;"	m
CLANG_EXEC	Makefile	/^CLANG_EXEC = clang$/;"	m
CLANG_IGNORED_WARNINGS	Makefile	/^CLANG_IGNORED_WARNINGS = reserved-id-macro                 \\$/;"	m
CLANG_WARNING_FLAGS	Makefile	/^CLANG_WARNING_FLAGS = -Weverything $(addprefix -Wno-,$(CLANG_IGNORED_WARNINGS))$/;"	m
COLORED	emu/include/base.h	/^#define COLORED(/;"	d
COMPILER	Makefile	/^COMPILER = GCC$/;"	m
CONTROLLER_BUTTON_A	emu/include/nes/io_reg.h	/^	CONTROLLER_BUTTON_A = 0,$/;"	e	enum:controller_button
CONTROLLER_BUTTON_B	emu/include/nes/io_reg.h	/^	CONTROLLER_BUTTON_B = 1,$/;"	e	enum:controller_button
CONTROLLER_BUTTON_DOWN	emu/include/nes/io_reg.h	/^	CONTROLLER_BUTTON_DOWN = 5,$/;"	e	enum:controller_button
CONTROLLER_BUTTON_LEFT	emu/include/nes/io_reg.h	/^	CONTROLLER_BUTTON_LEFT = 6,$/;"	e	enum:controller_button
CONTROLLER_BUTTON_RIGHT	emu/include/nes/io_reg.h	/^	CONTROLLER_BUTTON_RIGHT = 7,$/;"	e	enum:controller_button
CONTROLLER_BUTTON_SELECT	emu/include/nes/io_reg.h	/^	CONTROLLER_BUTTON_SELECT = 2,$/;"	e	enum:controller_button
CONTROLLER_BUTTON_START	emu/include/nes/io_reg.h	/^	CONTROLLER_BUTTON_START = 3,$/;"	e	enum:controller_button
CONTROLLER_BUTTON_UP	emu/include/nes/io_reg.h	/^	CONTROLLER_BUTTON_UP = 4,$/;"	e	enum:controller_button
CONTROLLER_NBUTTONS	emu/include/nes/io_reg.h	/^#define CONTROLLER_NBUTTONS /;"	d
CTESTS	Makefile	/^CTESTS = $(addprefix $(BIN_DIR)\/,$(patsubst %.c,%,$(filter %.c, $(TEST_SRC))))$/;"	m
CYAN	emu/include/base.h	/^#define CYAN(/;"	d
DEBUG_PRINT	emu/include/base.h	/^#	define DEBUG_PRINT(/;"	d
DEBUG_PRINT	emu/include/base.h	/^#define DEBUG_PRINT(/;"	d
DEFAULT_PORT	scripts/submit.py	/^DEFAULT_PORT   = 3000$/;"	v
DEFAULT_SERVER	scripts/submit.py	/^DEFAULT_SERVER = "http:\/\/localhost"$/;"	v
DISABLE_ASSERT	emu/include/base.h	/^#	define DISABLE_ASSERT$/;"	d
DISABLE_UNREACHABLE	emu/include/base.h	/^#	define DISABLE_UNREACHABLE$/;"	d
EMU	Makefile	/^EMU = $(BIN_DIR)\/hawknest-$(call lc,$(COMPILER))-$(call lc,$(MODE))$/;"	m
EMU_BUILD_DIR	Makefile	/^EMU_BUILD_DIR = $(BUILD_DIR)\/emu\/$(call lc,$(COMPILER))\/$(call lc,$(MODE))$/;"	m
EMU_DEP	Makefile	/^EMU_DEP = $(EMU_OBJ:.o=.d)$/;"	m
EMU_INCLUDE_DIR	Makefile	/^EMU_INCLUDE_DIR = $(EMU_SRC_DIR)\/include$/;"	m
EMU_LIBS	Makefile	/^EMU_LIBS = SDL2 readline$/;"	m
EMU_OBJ	Makefile	/^EMU_OBJ = $(addprefix $(EMU_BUILD_DIR)\/,$(EMU_SRC:.c=.o))$/;"	m
EMU_SRC	Makefile	/^EMU_SRC :=$/;"	m
EMU_SRC_DIR	Makefile	/^EMU_SRC_DIR = emu$/;"	m
ERROR_EXIT	emu/include/base.h	/^#define ERROR_EXIT(/;"	d
ERROR_PRINT	emu/include/base.h	/^#define ERROR_PRINT(/;"	d
FAILED	test/test.py	/^    FAILED      = 3$/;"	v	class:Test
Failure	test/test.py	/^class Failure(Exception):$/;"	c
GCC_EXEC	Makefile	/^GCC_EXEC = gcc$/;"	m
GCC_IGNORED_WARNINGS	Makefile	/^GCC_IGNORED_WARNINGS = packed-bitfield-compat \\$/;"	m
GCC_WARNING_FLAGS	Makefile	/^GCC_WARNING_FLAGS = -Wall -Wextra $(addprefix -Wno-,$(GCC_IGNORED_WARNINGS))$/;"	m
GET_HEX_ADDR	emu/shell.c	/^#define GET_HEX_ADDR(/;"	d	file:
GREEN	emu/include/base.h	/^#define GREEN(/;"	d
HAWKNEST_VERSION_STRING	emu/include/base.h	/^#define HAWKNEST_VERSION_STRING /;"	d
Hawknest Internals	Internals Overview.md	/^# Hawknest Internals$/;"	c
HawknestBuild	test/test.py	/^class HawknestBuild(BuildTest):$/;"	c
HawknestTest	test/test.py	/^class HawknestTest(BuildTest, Test):$/;"	c
INES_MIRRORING_HORIZONTAL	emu/include/ines.h	/^	INES_MIRRORING_HORIZONTAL = 0,$/;"	e	enum:ines_mirroring
INES_MIRRORING_VERTICAL	emu/include/ines.h	/^	INES_MIRRORING_VERTICAL = 1,$/;"	e	enum:ines_mirroring
INFO_PRINT	emu/include/base.h	/^#define INFO_PRINT(/;"	d
INTR_IRQ	emu/include/mos6502/mos6502.h	/^	INTR_IRQ  = 1,$/;"	e	enum:intr
INTR_NMI	emu/include/mos6502/mos6502.h	/^	INTR_NMI  = 2,$/;"	e	enum:intr
INTR_NONE	emu/include/mos6502/mos6502.h	/^	INTR_NONE = 0,$/;"	e	enum:intr
IN_PROGRESS	test/test.py	/^    IN_PROGRESS = 1$/;"	v	class:Test
L0001	build/test/hello.s	/^L0001:	rts$/;"	l
L0001	build/test/primes.s	/^L0001:	jsr     incsp4$/;"	l
L0002	build/test/primes.s	/^L0002:	ldx     #$00$/;"	l
L0003	build/test/hello.s	/^L0003:$/;"	l
L0005	build/test/primes.s	/^L0005:	ldy     #$01$/;"	l
L0006	build/test/primes.s	/^L0006:	ldx     #$00$/;"	l
L0007	build/test/primes.s	/^L0007:	ldy     #$01$/;"	l
L0008	build/test/primes.s	/^L0008:	ldy     #$03$/;"	l
L000F	build/test/primes.s	/^L000F:	jsr     booleq$/;"	l
L0012	build/test/primes.s	/^L0012:	jsr     incsp2$/;"	l
L0014	build/test/primes.s	/^L0014:	ldy     #$01$/;"	l
L0018	build/test/primes.s	/^L0018:$/;"	l
L001B	build/test/primes.s	/^L001B:$/;"	l
L001E	build/test/primes.s	/^L001E:	jsr     boolne$/;"	l
L001F	build/test/primes.s	/^L001F:	lda     #<(L0028)$/;"	l
L0023	build/test/primes.s	/^L0023:$/;"	l
L0026	build/test/primes.s	/^L0026:	lda     #<(L0018)$/;"	l
L0028	build/test/primes.s	/^L0028:$/;"	l
LD65_CFG	Makefile	/^LD65_CFG = $(LD65_CFG_DIR)\/hawknest.cfg$/;"	m
LD65_CFG_DIR	Makefile	/^LD65_CFG_DIR = cfg$/;"	m
LD65_EXEC	Makefile	/^LD65_EXEC = $(CC65_PREFIX)\/ld65$/;"	m
LD65_EXEC	Makefile	/^LD65_EXEC = ld65$/;"	m
LD65_NOCRT_CFG	Makefile	/^LD65_NOCRT_CFG = $(LD65_CFG_DIR)\/hawknest_nocrt.cfg$/;"	m
LIB	Makefile	/^LIB = $(BIN_DIR)\/hawknest.lib$/;"	m
LIB_ASMOBJ	Makefile	/^LIB_ASMOBJ = $(addprefix $(LIB_BUILD_DIR)\/,$(patsubst %.s,%.o,$(filter %.s,$(LIB_SRC))))$/;"	m
LIB_BUILD_DIR	Makefile	/^LIB_BUILD_DIR = $(BUILD_DIR)\/lib$/;"	m
LIB_CASM	Makefile	/^LIB_CASM = $(addprefix $(LIB_BUILD_DIR)\/,$(patsubst %.c,%.s,$(filter %.c,$(LIB_SRC))))$/;"	m
LIB_COBJ	Makefile	/^LIB_COBJ = $(LIB_CASM:.s=.o)$/;"	m
LIB_DEP	Makefile	/^LIB_DEP = $(LIB_OBJ:.o=.d)$/;"	m
LIB_OBJ	Makefile	/^LIB_OBJ = $(LIB_COBJ) $(LIB_ASMOBJ)$/;"	m
LIB_SRC	Makefile	/^LIB_SRC :=$/;"	m
LIB_SRC_DIR	Makefile	/^LIB_SRC_DIR = lib$/;"	m
LIKELY	emu/include/base.h	/^#define LIKELY(/;"	d
MAGENTA	emu/include/base.h	/^#define MAGENTA(/;"	d
MEMBUS_NPAGES	emu/include/membus.h	/^#define MEMBUS_NPAGES /;"	d
MEMBUS_PAGESIZE	emu/include/membus.h	/^#define MEMBUS_PAGESIZE /;"	d
MMC1_CHR_SWITCHING_4K	emu/include/nes/mmc1.h	/^	MMC1_CHR_SWITCHING_4K = 1,$/;"	e	enum:mmc1_chr_switching
MMC1_CHR_SWITCHING_8K	emu/include/nes/mmc1.h	/^	MMC1_CHR_SWITCHING_8K = 0,$/;"	e	enum:mmc1_chr_switching
MMC1_HIGH_PRGROM_FIXED	emu/include/nes/mmc1.h	/^	MMC1_HIGH_PRGROM_FIXED = 1,$/;"	e	enum:mmc1_prgrom_fixation
MMC1_LOW_PRGROM_FIXED	emu/include/nes/mmc1.h	/^	MMC1_LOW_PRGROM_FIXED = 0,$/;"	e	enum:mmc1_prgrom_fixation
MMC1_MIRRORING_HORIZONTAL	emu/include/nes/mmc1.h	/^	MMC1_MIRRORING_HORIZONTAL = 3,$/;"	e	enum:mmc1_mirroring
MMC1_MIRRORING_ONE_SCREEN_NT0	emu/include/nes/mmc1.h	/^	MMC1_MIRRORING_ONE_SCREEN_NT0 = 0,$/;"	e	enum:mmc1_mirroring
MMC1_MIRRORING_ONE_SCREEN_NT1	emu/include/nes/mmc1.h	/^	MMC1_MIRRORING_ONE_SCREEN_NT1 = 1,$/;"	e	enum:mmc1_mirroring
MMC1_MIRRORING_VERTICAL	emu/include/nes/mmc1.h	/^	MMC1_MIRRORING_VERTICAL = 2,$/;"	e	enum:mmc1_mirroring
MMC1_PRGROM_SWITCHING_16K	emu/include/nes/mmc1.h	/^	MMC1_PRGROM_SWITCHING_16K = 1,$/;"	e	enum:mmc1_prgrom_switching
MMC1_PRGROM_SWITCHING_32K	emu/include/nes/mmc1.h	/^	MMC1_PRGROM_SWITCHING_32K = 0,$/;"	e	enum:mmc1_prgrom_switching
MODE	Makefile	/^MODE = DEBUG$/;"	m
MODE_ABS	emu/include/mos6502/mos6502.h	/^	MODE_ABS    = 1,     \/\/ Absolute$/;"	e	enum:addr_mode
MODE_ABSX	emu/include/mos6502/mos6502.h	/^	MODE_ABSX   = 2,    \/\/ Absolute, indexed by X$/;"	e	enum:addr_mode
MODE_ABSY	emu/include/mos6502/mos6502.h	/^	MODE_ABSY   = 3,    \/\/ Absolute, indexed by Y$/;"	e	enum:addr_mode
MODE_ACC	emu/include/mos6502/mos6502.h	/^	MODE_ACC    = 4,     \/\/ Accumulator$/;"	e	enum:addr_mode
MODE_IDXIND	emu/include/mos6502/mos6502.h	/^	MODE_IDXIND = 7,  \/\/ Indexed-indirect$/;"	e	enum:addr_mode
MODE_IMM	emu/include/mos6502/mos6502.h	/^	MODE_IMM    = 5,     \/\/ Immediate$/;"	e	enum:addr_mode
MODE_IMPL	emu/include/mos6502/mos6502.h	/^	MODE_IMPL   = 6,    \/\/ Implied$/;"	e	enum:addr_mode
MODE_IND	emu/include/mos6502/mos6502.h	/^	MODE_IND    = 8,     \/\/ Indirect$/;"	e	enum:addr_mode
MODE_INDIDX	emu/include/mos6502/mos6502.h	/^	MODE_INDIDX = 9,  \/\/ Indirect-indexed$/;"	e	enum:addr_mode
MODE_INDY	emu/include/mos6502/mos6502.h	/^	MODE_INDY = 9,  \/\/ Indirect-indexed$/;"	e	enum:addr_mode
MODE_NONE	emu/include/mos6502/mos6502.h	/^	MODE_NONE   = 0,    \/\/ No address calculation in decode$/;"	e	enum:addr_mode
MODE_REL	emu/include/mos6502/mos6502.h	/^	MODE_REL    = 10,    \/\/ Relative$/;"	e	enum:addr_mode
MODE_XIND	emu/include/mos6502/mos6502.h	/^	MODE_XIND = 7,  \/\/ Indexed-indirect$/;"	e	enum:addr_mode
MODE_ZEROP	emu/include/mos6502/mos6502.h	/^	MODE_ZEROP  = 11,  \/\/ Zero-page$/;"	e	enum:addr_mode
MODE_ZEROPX	emu/include/mos6502/mos6502.h	/^	MODE_ZEROPX = 12, \/\/ Zero-page, indexed by X$/;"	e	enum:addr_mode
MODE_ZEROPY	emu/include/mos6502/mos6502.h	/^	MODE_ZEROPY = 13, \/\/ Zero-page, indexed by Y$/;"	e	enum:addr_mode
MOS6502_CLKDIVISOR	emu/include/mos6502/mos6502.h	/^#define MOS6502_CLKDIVISOR /;"	d
MOS6502_STEP_RESULT_ILLEGAL_INSTRUCTION	emu/include/mos6502/mos6502.h	/^	MOS6502_STEP_RESULT_ILLEGAL_INSTRUCTION,$/;"	e	enum:mos6502_step_result
MOS6502_STEP_RESULT_SUCCESS	emu/include/mos6502/mos6502.h	/^	MOS6502_STEP_RESULT_SUCCESS,$/;"	e	enum:mos6502_step_result
MOS6502_STEP_RESULT_UNHANDLED_VMCALL	emu/include/mos6502/mos6502.h	/^	MOS6502_STEP_RESULT_UNHANDLED_VMCALL,$/;"	e	enum:mos6502_step_result
MOS6502_STEP_RESULT_VMBREAK	emu/include/mos6502/mos6502.h	/^	MOS6502_STEP_RESULT_VMBREAK,$/;"	e	enum:mos6502_step_result
NES_NTSC_SYSCLK	emu/main.c	/^#define NES_NTSC_SYSCLK /;"	d	file:
NOT_IMPLEMENTED	emu/mos6502/mos6502.c	/^#define NOT_IMPLEMENTED(/;"	d	file:
O	emu/mos6502/mos6502.c	/^#define O(/;"	d	file:
PACKED	emu/include/base.h	/^#define PACKED /;"	d
PACKED	emu/include/nes/ppu.h	/^		} PACKED;$/;"	m	union:ppu::__anon7cc258ae040a	typeref:struct:ppu::__anon7cc258ae040a::__anon7cc258ae0508
PACKED	emu/include/nes/ppu.h	/^		} PACKED;$/;"	m	union:ppu::__anon7cc258ae060a	typeref:struct:ppu::__anon7cc258ae060a::__anon7cc258ae0708
PASSED	test/test.py	/^    PASSED      = 2$/;"	v	class:Test
PPU_CHR_BASEADDR_0000	emu/include/nes/ppu.h	/^	PPU_CHR_BASEADDR_0000 = 0,$/;"	e	enum:ppu_chr_baseaddr
PPU_CHR_BASEADDR_1000	emu/include/nes/ppu.h	/^	PPU_CHR_BASEADDR_1000 = 1,$/;"	e	enum:ppu_chr_baseaddr
PPU_CLKDIVISOR	emu/include/nes/ppu.h	/^#define PPU_CLKDIVISOR /;"	d
PPU_NT_BASEADDR_2000	emu/include/nes/ppu.h	/^	PPU_NT_BASEADDR_2000 = 0,$/;"	e	enum:ppu_nt_baseaddr
PPU_NT_BASEADDR_2400	emu/include/nes/ppu.h	/^	PPU_NT_BASEADDR_2400 = 1,$/;"	e	enum:ppu_nt_baseaddr
PPU_NT_BASEADDR_2800	emu/include/nes/ppu.h	/^	PPU_NT_BASEADDR_2800 = 2,$/;"	e	enum:ppu_nt_baseaddr
PPU_NT_BASEADDR_2C00	emu/include/nes/ppu.h	/^	PPU_NT_BASEADDR_2C00 = 3,$/;"	e	enum:ppu_nt_baseaddr
PPU_OUTPUT_HEIGHT	emu/include/nes/ppu.h	/^#define PPU_OUTPUT_HEIGHT /;"	d
PPU_OUTPUT_WIDTH	emu/include/nes/ppu.h	/^#define PPU_OUTPUT_WIDTH /;"	d
PPU_SPRITESIZE_8x16	emu/include/nes/ppu.h	/^	PPU_SPRITESIZE_8x16 = 1,$/;"	e	enum:ppu_spritesize
PPU_SPRITESIZE_8x8	emu/include/nes/ppu.h	/^	PPU_SPRITESIZE_8x8 = 0,$/;"	e	enum:ppu_spritesize
PPU_VRAM_ADDR_INC_1	emu/include/nes/ppu.h	/^	PPU_VRAM_ADDR_INC_1 = 0,$/;"	e	enum:ppu_vram_addr_inc
PPU_VRAM_ADDR_INC_32	emu/include/nes/ppu.h	/^	PPU_VRAM_ADDR_INC_32 = 1,$/;"	e	enum:ppu_vram_addr_inc
PROJECT_NAME	Makefile	/^PROJECT_NAME=p1$/;"	m
PROJECT_PORT	Makefile	/^PROJECT_PORT=3000$/;"	m
PROJECT_SERVER	Makefile	/^PROJECT_SERVER="http:\/\/subutai.cs.iit.edu"$/;"	m
PROMPT_STR	emu/include/shell.h	/^#define PROMPT_STR /;"	d
RED	emu/include/base.h	/^#define RED(/;"	d
RESET_MANAGER_MAX_DEVICES	emu/include/reset_manager.h	/^#define RESET_MANAGER_MAX_DEVICES /;"	d
Reference Counting	Internals Overview.md	/^## Reference Counting$/;"	s
Reset Management and Sequencing	Internals Overview.md	/^## Reset Management and Sequencing$/;"	s
SPELLINGS	emu/shell.c	/^#define SPELLINGS(/;"	d	file:
SUGGESTION_PRINT	emu/include/base.h	/^#define SUGGESTION_PRINT(/;"	d
SUGGESTION_PRINT_NOBRK	emu/include/base.h	/^#define SUGGESTION_PRINT_NOBRK(/;"	d
TEST_ASMOBJ	Makefile	/^TEST_ASMOBJ = $(addprefix $(TEST_BUILD_DIR)\/,$(patsubst %.s,%.o,$(filter %.s,$(TEST_SRC))))$/;"	m
TEST_BUILD_DIR	Makefile	/^TEST_BUILD_DIR = $(BUILD_DIR)\/test$/;"	m
TEST_CASM	Makefile	/^TEST_CASM = $(addprefix $(TEST_BUILD_DIR)\/,$(patsubst %.c,%.s,$(filter %.c,$(TEST_SRC))))$/;"	m
TEST_COBJ	Makefile	/^TEST_COBJ = $(TEST_CASM:.s=.o)$/;"	m
TEST_DEP	Makefile	/^TEST_DEP = $(TEST_OBJ:.o=.d) $/;"	m
TEST_OBJ	Makefile	/^TEST_OBJ = $(TEST_COBJ) $(TEST_ASMOBJ)$/;"	m
TEST_SRC	Makefile	/^TEST_SRC :=$/;"	m
TEST_SRC_DIR	Makefile	/^TEST_SRC_DIR = test$/;"	m
TIMEKEEPER_MAX_TIMERS	emu/include/timekeeper.h	/^#define TIMEKEEPER_MAX_TIMERS /;"	d
TV_NTSC	emu/ines.c	/^	TV_NTSC = 0,$/;"	e	enum:tv_type	file:
TV_PAL	emu/ines.c	/^	TV_PAL = 1,$/;"	e	enum:tv_type	file:
Test	test/test.py	/^class Test(object):$/;"	c
Timekeeping	Internals Overview.md	/^## Timekeeping$/;"	s
Timers	Internals Overview.md	/^### Timers$/;"	S
UNBOLD	emu/include/base.h	/^#define UNBOLD(/;"	d
UNIMPLEMENTED	emu/include/base.h	/^#define UNIMPLEMENTED(/;"	d
UNLIKELY	emu/include/base.h	/^#define UNLIKELY(/;"	d
UNREACHABLE	emu/include/base.h	/^#define UNREACHABLE(/;"	d
UNREACHABLE_ASSUMPTION	emu/include/base.h	/^#	define UNREACHABLE_ASSUMPTION(/;"	d
UNREACHABLE_ERROR	emu/include/base.h	/^#	define UNREACHABLE_ERROR(/;"	d
UNREACHABLE_REACTION	emu/include/base.h	/^#	define UNREACHABLE_REACTION(/;"	d
VMCALL_ARGS	emu/include/mos6502/vmcall.h	/^#define VMCALL_ARGS /;"	d
VMCALL_BREAK	emu/include/mos6502/vmcall.h	/^#define VMCALL_BREAK /;"	d
VMCALL_CLOSE	emu/include/mos6502/vmcall.h	/^#define VMCALL_CLOSE /;"	d
VMCALL_DUMP	emu/include/mos6502/vmcall.h	/^#define VMCALL_DUMP /;"	d
VMCALL_EXIT	emu/include/mos6502/vmcall.h	/^#define VMCALL_EXIT /;"	d
VMCALL_OPEN	emu/include/mos6502/vmcall.h	/^#define VMCALL_OPEN /;"	d
VMCALL_READ	emu/include/mos6502/vmcall.h	/^#define VMCALL_READ /;"	d
VMCALL_WRITE	emu/include/mos6502/vmcall.h	/^#define VMCALL_WRITE /;"	d
WARNING_PRINT	emu/include/base.h	/^#define WARNING_PRINT(/;"	d
WHITE	emu/include/base.h	/^#define WHITE(/;"	d
YELLOW	emu/include/base.h	/^#define YELLOW(/;"	d
__anon00ba67f30108	emu/mos6502/mos6502.c	/^typedef struct {$/;"	s	file:
__anon00ba67f3020a	emu/mos6502/mos6502.c	/^  union {$/;"	u	struct:__anon00ba67f30108	file:
__anon00ba67f30308	emu/mos6502/mos6502.c	/^typedef struct {$/;"	s	file:
__anon0dcdd1e70108	emu/include/nes/mmc1.h	/^	struct {$/;"	s	union:mmc1_reg0
__anon0dcdd1e70208	emu/include/nes/mmc1.h	/^    struct {$/;"	s	union:mmc1_reg1
__anon0dcdd1e70308	emu/include/nes/mmc1.h	/^    struct {$/;"	s	union:mmc1_reg1
__anon0dcdd1e70408	emu/include/nes/mmc1.h	/^    struct {$/;"	s	union:mmc1_reg2
__anon0dcdd1e70508	emu/include/nes/mmc1.h	/^	struct {$/;"	s	union:mmc1_reg3
__anon36987f4f0108	emu/include/timekeeper.h	/^	struct {$/;"	s	struct:timekeeper
__anon4372424d0108	emu/include/membus.h	/^	struct {$/;"	s	struct:membus
__anon4372424d020a	emu/include/membus.h	/^		union {$/;"	u	struct:membus::__anon4372424d0108
__anon4372424d0308	emu/include/membus.h	/^	struct {$/;"	s	struct:membus
__anon4372424d040a	emu/include/membus.h	/^		union {$/;"	u	struct:membus::__anon4372424d0308
__anon7cc258ae010a	emu/include/nes/ppu.h	/^	union {$/;"	u	struct:ppu
__anon7cc258ae0208	emu/include/nes/ppu.h	/^		struct {$/;"	s	union:ppu::__anon7cc258ae010a
__anon7cc258ae0308	emu/include/nes/ppu.h	/^	struct {$/;"	s	struct:ppu
__anon7cc258ae040a	emu/include/nes/ppu.h	/^	union {$/;"	u	struct:ppu
__anon7cc258ae0508	emu/include/nes/ppu.h	/^		struct {$/;"	s	union:ppu::__anon7cc258ae040a
__anon7cc258ae060a	emu/include/nes/ppu.h	/^	union {$/;"	u	struct:ppu
__anon7cc258ae0708	emu/include/nes/ppu.h	/^		struct {$/;"	s	union:ppu::__anon7cc258ae060a
__anon7cc258ae080a	emu/include/nes/ppu.h	/^	union {$/;"	u	struct:ppu
__anonb3491a410108	emu/include/reset_manager.h	/^	struct {$/;"	s	struct:reset_manager
__anonfa668a2b0108	emu/include/mos6502/mos6502.h	/^	struct {$/;"	s	union:stat_reg
__ctype	lib/ctype.s	/^__ctype:$/;"	l
__init__	test/test.py	/^    def __init__(self, project_path = None, test_path = None, log = None, use_gdb = False, use_v/;"	m	class:Test
__init__	test/test.py	/^   def __init__(self, value, detail=None):$/;"	m	class:Failure
__str__	test/test.py	/^    def __str__(self):$/;"	m	class:Test
__str__	test/test.py	/^   def __str__(self):$/;"	m	class:Failure
_exit	lib/crt0.s	/^_exit:  pha$/;"	l
_handle_irq:	build/lib/intr.s	/^.proc	_handle_irq: near$/;"	l
_handle_nmi:	build/lib/intr.s	/^.proc	_handle_nmi: near$/;"	l
_is_prime:	build/test/primes.s	/^.proc	_is_prime: near$/;"	l
_main:	build/test/hello.s	/^.proc	_main: near$/;"	l
_main:	build/test/primes.s	/^.proc	_main: near$/;"	l
a	emu/include/mos6502/mos6502.h	/^	uint8_t a;    \/\/ accumulator$/;"	m	struct:mos6502	typeref:typename:uint8_t
abs_addr	emu/mos6502/mos6502.c	/^  uint16_t abs_addr;$/;"	m	struct:__anon00ba67f30108	typeref:typename:uint16_t	file:
add_another	test/65_bcc0.s	/^add_another:$/;"	l
add_another	test/66_bcc1.s	/^add_another:$/;"	l
add_another	test/67_bcs0.s	/^add_another:$/;"	l
add_another	test/68_bcs1.s	/^add_another:$/;"	l
add_another	test/69_beq0.s	/^add_another:$/;"	l
add_another	test/70_beq1.s	/^add_another:$/;"	l
add_another	test/71_bne0.s	/^add_another:$/;"	l
add_another	test/72_bne1.s	/^add_another:$/;"	l
add_another	test/73_bpl0.s	/^add_another:$/;"	l
add_another	test/74_bpl1.s	/^add_another:$/;"	l
add_another	test/75_bmi0.s	/^add_another:$/;"	l
add_another	test/76_bmi1.s	/^add_another:$/;"	l
addr	emu/include/mos6502/mos6502.h	/^	uint16_t addr;$/;"	m	struct:decode_info	typeref:typename:uint16_t
addr_mode	emu/include/mos6502/mos6502.h	/^typedef enum addr_mode {$/;"	g
addr_mode_t	emu/include/mos6502/mos6502.h	/^} addr_mode_t;$/;"	t	typeref:enum:addr_mode
after	test/test.py	/^    def after(self):$/;"	m	class:Test
again	test/97_sqrt.s	/^again:$/;"	l
all_tests	test/test.py	/^    all_tests  = []$/;"	v
arg16	emu/mos6502/mos6502.c	/^    uint16_t arg16;$/;"	m	union:__anon00ba67f30108::__anon00ba67f3020a	typeref:typename:uint16_t	file:
arg8	emu/mos6502/mos6502.c	/^    uint8_t arg8;$/;"	m	union:__anon00ba67f30108::__anon00ba67f3020a	typeref:typename:uint8_t	file:
args	scripts/submit.py	/^    args = parser.parse_args()$/;"	v
attr	emu/include/nes/ppu.h	/^	ppu_spriteattr_t attr;$/;"	m	struct:ppu_sprite	typeref:typename:ppu_spriteattr_t
attr_addr	emu/nes/ppu.c	/^attr_addr (ppu_t * nonnull ppu)$/;"	f	typeref:typename:uint16_t	file:
attr_latch	emu/include/nes/ppu.h	/^	uint8_t bmp_latch[2], nt_latch, attr_latch;$/;"	m	struct:ppu	typeref:typename:uint8_t[2]
b	emu/include/mos6502/mos6502.h	/^		bool b : 1; \/\/ break command$/;"	m	struct:stat_reg::__anonfa668a2b0108	typeref:typename:bool:1
banksel	emu/include/nes/mmc1.h	/^		uint8_t banksel    : 4;$/;"	m	struct:mmc1_reg3::__anon0dcdd1e70508	typeref:typename:uint8_t:4
banksel4k	emu/include/nes/mmc1.h	/^        uint8_t banksel4k : 5;$/;"	m	struct:mmc1_reg1::__anon0dcdd1e70208	typeref:typename:uint8_t:5
banksel4k	emu/include/nes/mmc1.h	/^        uint8_t banksel4k : 5;$/;"	m	struct:mmc1_reg2::__anon0dcdd1e70408	typeref:typename:uint8_t:5
banksel8k	emu/include/nes/mmc1.h	/^        uint8_t banksel8k : 4;$/;"	m	struct:mmc1_reg1::__anon0dcdd1e70308	typeref:typename:uint8_t:4
bb_chram_size	emu/ines.c	/^	uint8_t bb_chram_size : 4;$/;"	m	struct:ines2_flags11	typeref:typename:uint8_t:4	file:
bb_wram_size	emu/ines.c	/^	uint8_t bb_wram_size : 4;$/;"	m	struct:ines2_flags10	typeref:typename:uint8_t:4	file:
behind_bg	emu/include/nes/ppu.h	/^	bool behind_bg : 1;$/;"	m	struct:ppu_spriteattr	typeref:typename:bool:1
bg_attr_shiftregs	emu/include/nes/ppu.h	/^	uint8_t bg_attr_shiftregs[2];$/;"	m	struct:ppu	typeref:typename:uint8_t[2]
bg_bmp_addr	emu/nes/ppu.c	/^bg_bmp_addr (ppu_t * nonnull ppu)$/;"	f	typeref:typename:uint16_t	file:
bg_bmp_shiftregs	emu/include/nes/ppu.h	/^	uint16_t bg_bmp_shiftregs[2];$/;"	m	struct:ppu	typeref:typename:uint16_t[2]
bg_chr_baseaddr	emu/include/nes/ppu.h	/^		ppu_chr_baseaddr_t bg_chr_baseaddr     : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:ppu_chr_baseaddr_t:1
bg_en	emu/include/nes/ppu.h	/^			bool bg_en          : 1;$/;"	m	struct:ppu::__anon7cc258ae010a::__anon7cc258ae0208	typeref:typename:bool:1
bg_memfetch	emu/nes/ppu.c	/^bg_memfetch (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
bg_palette	emu/include/nes/ppu.h	/^	uint8_t bg_palette;$/;"	m	struct:ppu	typeref:typename:uint8_t
bitswap	emu/nes/ppu.c	/^bitswap (uint8_t * nonnull val)$/;"	f	typeref:typename:void	file:
bmp_latch	emu/include/nes/ppu.h	/^	uint8_t bmp_latch[2], nt_latch, attr_latch;$/;"	m	struct:ppu	typeref:typename:uint8_t[2]
bp_list	emu/shell.c	/^bp_list (void)$/;"	f	typeref:typename:void	file:
bptl2	emu/shell.c	/^static uint8_t * bptl2[256];$/;"	v	typeref:typename:uint8_t * [256]	file:
buggy_read16	emu/mos6502/mos6502.c	/^static inline uint16_t buggy_read16(mos6502_t* cpu, uint16_t addr) {$/;"	f	typeref:typename:uint16_t	file:
build_test	test/test.py	/^    build_test = HawknestBuild$/;"	v
bus	emu/include/mos6502/mos6502.h	/^	struct membus * nonnull \/*strong*\/ bus;$/;"	m	struct:mos6502	typeref:struct:membus * nonnull
bus	emu/include/nes/ppu.h	/^	struct membus * nonnull \/*strong*\/ bus;$/;"	m	struct:ppu	typeref:struct:membus * nonnull
bytes	emu/include/memory.h	/^	uint8_t bytes[];$/;"	m	struct:memory	typeref:typename:uint8_t[]
c	emu/include/mos6502/mos6502.h	/^		bool c : 1; \/\/ carry flag$/;"	m	struct:stat_reg::__anonfa668a2b0108	typeref:typename:bool:1
check	Makefile	/^check: $/;"	t
check_step_result	emu/shell.c	/^check_step_result (mos6502_t * cpu, mos6502_step_result_t step_result)$/;"	f	typeref:typename:int	file:
children	test/test.py	/^    children   = list()$/;"	v	class:Test
chr_switching	emu/include/nes/mmc1.h	/^		mmc1_chr_switching_t chr_switching       : 1;$/;"	m	struct:mmc1_reg0::__anon0dcdd1e70108	typeref:typename:mmc1_chr_switching_t:1
chram	emu/include/ines.h	/^	memory_t * nullable \/*unowned*\/ chram;$/;"	m	struct:rominfo	typeref:typename:memory_t * nullable
chrom	emu/include/ines.h	/^	memory_t * nullable \/*unowned*\/ chrom;$/;"	m	struct:rominfo	typeref:typename:memory_t * nullable
chrom	emu/nes/sxrom.c	/^	memory_t * nonnull \/*strong*\/ chrom;$/;"	m	struct:sxrom	typeref:typename:memory_t * nonnull	file:
chrom_size	emu/ines.c	/^	uint8_t chrom_size;$/;"	m	struct:common_header	typeref:typename:uint8_t	file:
chrom_size_nib	emu/ines.c	/^	uint8_t chrom_size_nib : 4;$/;"	m	struct:ines2_flags9	typeref:typename:uint8_t:4	file:
clean	Makefile	/^clean:$/;"	t
clean	test/test.py	/^   def clean(self, files=[], required=True):$/;"	m	class:BuildTest
clear_regs	emu/nes/ppu.c	/^clear_regs (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
clk_countdown	emu/include/nes/ppu.h	/^	uint64_t clk_countdown;$/;"	m	struct:ppu	typeref:typename:uint64_t
clk_cyclenum	emu/include/timekeeper.h	/^	uint64_t clk_cyclenum;$/;"	m	struct:timekeeper	typeref:typename:uint64_t
clk_period	emu/include/timekeeper.h	/^	double clk_period;$/;"	m	struct:timekeeper	typeref:typename:double
cmd	test/test.py	/^    cmd        = None$/;"	v	class:Test
cmd_break	emu/shell.c	/^cmd_break (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_break_list	emu/shell.c	/^cmd_break_list (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_break_rm	emu/shell.c	/^cmd_break_rm (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_cont	emu/shell.c	/^cmd_cont (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_dumpmem	emu/shell.c	/^cmd_dumpmem (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_help	emu/shell.c	/^cmd_help (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_irq	emu/shell.c	/^cmd_irq (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_jump	emu/shell.c	/^cmd_jump (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_nmi	emu/shell.c	/^cmd_nmi (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_peek	emu/shell.c	/^cmd_peek (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_poke	emu/shell.c	/^cmd_poke (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_print_instr	emu/shell.c	/^cmd_print_instr (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_quit	emu/shell.c	/^cmd_quit (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:noreturn int	file:
cmd_regs	emu/shell.c	/^cmd_regs (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmd_step	emu/shell.c	/^cmd_step (mos6502_t * cpu, char * args)$/;"	f	typeref:typename:int	file:
cmpe	test/95_max.s	/^cmpe:$/;"	l
coarse_xscroll	emu/include/nes/ppu.h	/^			uint8_t coarse_xscroll        : 5;$/;"	m	struct:ppu::__anon7cc258ae040a::__anon7cc258ae0508	typeref:typename:uint8_t:5
coarse_yscroll	emu/include/nes/ppu.h	/^			uint8_t coarse_yscroll        : 5;$/;"	m	struct:ppu::__anon7cc258ae040a::__anon7cc258ae0508	typeref:typename:uint8_t:5
command_descriptor	emu/shell.c	/^typedef struct command_descriptor {$/;"	s	file:
command_descriptor_t	emu/shell.c	/^} command_descriptor_t;$/;"	t	typeref:struct:command_descriptor	file:
commands	emu/shell.c	/^static const command_descriptor_t commands[] = {$/;"	v	typeref:typename:const command_descriptor_t[]	file:
common_header	emu/ines.c	/^typedef struct common_header {$/;"	s	file:
common_header_t	emu/ines.c	/^} common_header_t;$/;"	t	typeref:struct:common_header	file:
controller_button	emu/include/nes/io_reg.h	/^typedef enum controller_button {$/;"	g
controller_button_t	emu/include/nes/io_reg.h	/^} PACKED controller_button_t;$/;"	t	typeref:enum:controller_button PACKED
controller_mappings	emu/include/nes/io_reg.h	/^	SDL_Scancode controller_mappings[CONTROLLER_NBUTTONS][2];$/;"	m	struct:io_reg	typeref:typename:SDL_Scancode[][2]
controller_shiftregs	emu/include/nes/io_reg.h	/^	uint8_t controller_shiftregs[2];$/;"	m	struct:io_reg	typeref:typename:uint8_t[2]
controller_strobe	emu/include/nes/io_reg.h	/^	bool controller_strobe;$/;"	m	struct:io_reg	typeref:typename:bool
countdown	emu/include/timekeeper.h	/^		uint64_t * nullable countdown;$/;"	m	struct:timekeeper::__anon36987f4f0108	typeref:typename:uint64_t * nullable
cpu	emu/include/ines.h	/^	mos6502_t * nonnull \/*unowned*\/ cpu;$/;"	m	struct:rominfo	typeref:typename:mos6502_t * nonnull
cpu	emu/include/mos6502/mos6502.h	/^	mos6502_t * nonnull cpu;$/;"	m	struct:decode_info	typeref:typename:mos6502_t * nonnull
cpu	emu/include/nes/io_reg.h	/^	mos6502_t * nonnull \/*unowned*\/ cpu;$/;"	m	struct:io_reg	typeref:typename:mos6502_t * nonnull
cpu	emu/include/nes/ppu.h	/^	struct mos6502 * nonnull \/*unowned*\/ cpu;$/;"	m	struct:ppu	typeref:struct:mos6502 * nonnull
cpu	emu/nes/sxrom.c	/^	mos6502_t * nonnull \/*unowned*\/ cpu;$/;"	m	struct:sxrom	typeref:typename:mos6502_t * nonnull	file:
d	emu/include/mos6502/mos6502.h	/^		bool d : 1; \/\/ decimal mode$/;"	m	struct:stat_reg::__anonfa668a2b0108	typeref:typename:bool:1
data	emu/include/membus.h	/^			uint8_t * nullable \/*unowned*\/ data;$/;"	m	union:membus::__anon4372424d0108::__anon4372424d020a	typeref:typename:uint8_t * nullable
data	emu/include/membus.h	/^			uint8_t * nullable \/*unowned*\/ data;$/;"	m	union:membus::__anon4372424d0308::__anon4372424d040a	typeref:typename:uint8_t * nullable
data_lanes	emu/include/membus.h	/^	uint8_t data_lanes;$/;"	m	struct:membus	typeref:typename:uint8_t
decode	emu/mos6502/mos6502.c	/^static int decode(mos6502_t* cpu, int pc, enc_t* enc) {$/;"	f	typeref:typename:int	file:
decode_info	emu/include/mos6502/mos6502.h	/^typedef struct decode_info {$/;"	s
decode_info_t	emu/include/mos6502/mos6502.h	/^} decode_info_t;$/;"	t	typeref:struct:decode_info
decode_ram_size	emu/ines.c	/^decode_ram_size (size_t encoded_size)$/;"	f	typeref:typename:size_t	file:
defop	emu/mos6502/mos6502.c	/^#define defop(/;"	d	file:
defop	emu/mos6502/mos6502.c	/^defop(ADC) { NOT_IMPLEMENTED(ADC); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(AND) { NOT_IMPLEMENTED(AND); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(ASL) { NOT_IMPLEMENTED(ASL); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BCC) { NOT_IMPLEMENTED(BCC); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BCS) { NOT_IMPLEMENTED(BCS); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BEQ) { NOT_IMPLEMENTED(BEQ); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BIT) { NOT_IMPLEMENTED(BIT); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BMI) { NOT_IMPLEMENTED(BMI); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BNE) { NOT_IMPLEMENTED(BNE); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BPL) { NOT_IMPLEMENTED(BPL); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BRK) { NOT_IMPLEMENTED(BRK); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BVC) { NOT_IMPLEMENTED(BVC); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(BVS) { NOT_IMPLEMENTED(BVS); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(CLC) { NOT_IMPLEMENTED(CLC); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(CLD) { NOT_IMPLEMENTED(CLD); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(CLI) { NOT_IMPLEMENTED(CLI); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(CLV) { NOT_IMPLEMENTED(CLV); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(CMP) { NOT_IMPLEMENTED(CMP); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(CPX) { NOT_IMPLEMENTED(CPX); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(CPY) { NOT_IMPLEMENTED(CPY); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(DEC) { NOT_IMPLEMENTED(DEC); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(DEX) { NOT_IMPLEMENTED(DEX); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(DEY) { NOT_IMPLEMENTED(DEY); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(EOR) { NOT_IMPLEMENTED(EOR); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(INC) { NOT_IMPLEMENTED(INC); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(INX) { NOT_IMPLEMENTED(INX); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(INY) { NOT_IMPLEMENTED(INY); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(JMP) { NOT_IMPLEMENTED(JMP); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(JSR) { NOT_IMPLEMENTED(JSR); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(LDA) { cpu->a = read8(cpu, enc->abs_addr); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(LDX) { NOT_IMPLEMENTED(LDX); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(LDY) { NOT_IMPLEMENTED(LDY); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(LSR) { NOT_IMPLEMENTED(LSR); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(NOP) { NOT_IMPLEMENTED(NOP); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(ORA) { NOT_IMPLEMENTED(ORA); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(PHA) { NOT_IMPLEMENTED(PHA); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(PHP) { NOT_IMPLEMENTED(PHP); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(PLA) { NOT_IMPLEMENTED(PLA); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(PLP) { NOT_IMPLEMENTED(PLP); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(ROL) { NOT_IMPLEMENTED(ROL); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(ROR) { NOT_IMPLEMENTED(ROR); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(RTI) { NOT_IMPLEMENTED(RTI); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(RTS) { NOT_IMPLEMENTED(RTS); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(SBC) { NOT_IMPLEMENTED(SBC); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(SEC) { NOT_IMPLEMENTED(SEC); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(SED) { NOT_IMPLEMENTED(SED); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(SEI) { NOT_IMPLEMENTED(SEI); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(STA) { NOT_IMPLEMENTED(STA); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(STX) { NOT_IMPLEMENTED(STX); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(STY) { NOT_IMPLEMENTED(STY); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(TAX) { NOT_IMPLEMENTED(TAX); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(TAY) { NOT_IMPLEMENTED(TAY); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(TSX) { NOT_IMPLEMENTED(TSX); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(TXA) { NOT_IMPLEMENTED(TXA); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(TXS) { NOT_IMPLEMENTED(TXS); }$/;"	f
defop	emu/mos6502/mos6502.c	/^defop(TYA) { NOT_IMPLEMENTED(TYA); }$/;"	f
deinit	emu/membus.c	/^deinit (membus_t * nonnull bus)$/;"	f	typeref:typename:void	file:
deinit	emu/mos6502/mos6502-common.c	/^static void deinit(mos6502_t* cpu) {$/;"	f	typeref:typename:void	file:
deinit	emu/nes/ppu.c	/^deinit (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
deinit	emu/nes/sxrom.c	/^deinit (sxrom_t * cart)$/;"	f	typeref:typename:void	file:
deinit	emu/reset_manager.c	/^deinit (reset_manager_t * rm)$/;"	f	typeref:typename:void	file:
deinit	emu/timekeeper.c	/^deinit (timekeeper_t * tk)$/;"	f	typeref:typename:void	file:
desc	test/test.py	/^    desc       = None$/;"	v	class:Test
desc	test/test.py	/^    desc      = None$/;"	v	class:HawknestTest
desc	test/test.py	/^   desc    = "Hawknest builds cleanly using make"$/;"	v	class:HawknestBuild
desc	test/test.py	/^   desc    = "build project using make"$/;"	v	class:BuildTest
description	emu/shell.c	/^	const char * description;$/;"	m	struct:command_descriptor	typeref:typename:const char *	file:
dev	emu/include/reset_manager.h	/^		void * nullable \/*weak*\/ dev;$/;"	m	struct:reset_manager::__anonb3491a410108	typeref:typename:void * nullable
devices	emu/include/reset_manager.h	/^	} devices[RESET_MANAGER_MAX_DEVICES];$/;"	m	struct:reset_manager	typeref:struct:reset_manager::__anonb3491a410108[]
done	test/test.py	/^    def done(self):$/;"	m	class:Test
dont	test/65_bcc0.s	/^dont:$/;"	l
dont	test/66_bcc1.s	/^dont:$/;"	l
dont	test/67_bcs0.s	/^dont:$/;"	l
dont	test/68_bcs1.s	/^dont:$/;"	l
dont	test/69_beq0.s	/^dont:$/;"	l
dont	test/70_beq1.s	/^dont:$/;"	l
dont	test/71_bne0.s	/^dont:$/;"	l
dont	test/72_bne1.s	/^dont:$/;"	l
dont	test/73_bpl0.s	/^dont:$/;"	l
dont	test/74_bpl1.s	/^dont:$/;"	l
dont	test/75_bmi0.s	/^dont:$/;"	l
dont	test/76_bmi1.s	/^dont:$/;"	l
dont	test/77_bvc0.s	/^dont:$/;"	l
dont	test/78_bvc1.s	/^dont:$/;"	l
dont	test/79_bvs0.s	/^dont:$/;"	l
dont	test/80_bvs2.s	/^dont:$/;"	l
dotnum	emu/include/nes/ppu.h	/^	size_t dotnum;$/;"	m	struct:ppu	typeref:typename:size_t
draw_pixel	emu/nes/ppu.c	/^draw_pixel (ppu_t * ppu)$/;"	f	typeref:typename:void	file:
dummy_memfetch	emu/nes/ppu.c	/^dummy_memfetch (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
emph_blue	emu/include/nes/ppu.h	/^			bool emph_blue      : 1;$/;"	m	struct:ppu::__anon7cc258ae010a::__anon7cc258ae0208	typeref:typename:bool:1
emph_blue	emu/include/nes/ppu.h	/^	bool emph_blue        : 1;$/;"	m	struct:ppu_pixel	typeref:typename:bool:1
emph_green	emu/include/nes/ppu.h	/^			bool emph_green     : 1;$/;"	m	struct:ppu::__anon7cc258ae010a::__anon7cc258ae0208	typeref:typename:bool:1
emph_green	emu/include/nes/ppu.h	/^	bool emph_green       : 1;$/;"	m	struct:ppu_pixel	typeref:typename:bool:1
emph_red	emu/include/nes/ppu.h	/^			bool emph_red       : 1;$/;"	m	struct:ppu::__anon7cc258ae010a::__anon7cc258ae0208	typeref:typename:bool:1
emph_red	emu/include/nes/ppu.h	/^	bool emph_red         : 1;$/;"	m	struct:ppu_pixel	typeref:typename:bool:1
emu	Makefile	/^emu: $(EMU)$/;"	t
enc_t	emu/mos6502/mos6502.c	/^} enc_t;$/;"	t	typeref:struct:__anon00ba67f30108	file:
eval_nsprites	emu/include/nes/ppu.h	/^	uint8_t eval_nsprites;$/;"	m	struct:ppu	typeref:typename:uint8_t
eval_sprites	emu/include/nes/ppu.h	/^	ppu_sprite_t eval_sprites[8];$/;"	m	struct:ppu	typeref:typename:ppu_sprite_t[8]
evaluator	emu/mos6502/mos6502.c	/^  widget_func_t evaluator;$/;"	m	struct:__anon00ba67f30308	typeref:typename:widget_func_t	file:
fail	test/98_isalpha.s	/^fail:$/;"	l
fail	test/test.py	/^    def fail(self, reason = None):$/;"	m	class:Test
find_max	test/95_max.s	/^find_max:$/;"	l
fine_xscroll	emu/include/nes/ppu.h	/^	uint8_t fine_xscroll;$/;"	m	struct:ppu	typeref:typename:uint8_t
fine_yscroll	emu/include/nes/ppu.h	/^			uint8_t fine_yscroll          : 3;$/;"	m	struct:ppu::__anon7cc258ae040a::__anon7cc258ae0508	typeref:typename:uint8_t:3
first	scripts/submit.py	/^    first = sanitize(input("Please enter your first name: "), 'first')$/;"	v
flags10	emu/ines.c	/^	ines2_flags10_t flags10;$/;"	m	struct:ines2_header	typeref:typename:ines2_flags10_t	file:
flags11	emu/ines.c	/^	ines2_flags11_t flags11;$/;"	m	struct:ines2_header	typeref:typename:ines2_flags11_t	file:
flags12	emu/ines.c	/^	ines2_flags12_t flags12;$/;"	m	struct:ines2_header	typeref:typename:ines2_flags12_t	file:
flags6	emu/ines.c	/^	flags6_t flags6;$/;"	m	struct:common_header	typeref:typename:flags6_t	file:
flags6	emu/ines.c	/^typedef struct flags6 {$/;"	s	file:
flags6_t	emu/ines.c	/^} flags6_t;$/;"	t	typeref:struct:flags6	file:
flags7	emu/ines.c	/^	flags7_t flags7;$/;"	m	struct:common_header	typeref:typename:flags7_t	file:
flags7	emu/ines.c	/^typedef struct flags7 {$/;"	s	file:
flags7_t	emu/ines.c	/^} flags7_t;$/;"	t	typeref:struct:flags7	file:
flags8	emu/ines.c	/^	ines2_flags8_t flags8;$/;"	m	struct:ines2_header	typeref:typename:ines2_flags8_t	file:
flags9	emu/ines.c	/^	ines1_flags9_t flags9;$/;"	m	struct:ines1_header	typeref:typename:ines1_flags9_t	file:
flags9	emu/ines.c	/^	ines2_flags9_t flags9;$/;"	m	struct:ines2_header	typeref:typename:ines2_flags9_t	file:
four_screen_vram	emu/ines.c	/^	bool four_screen_vram : 1;$/;"	m	struct:flags6	typeref:typename:bool:1	file:
framenum	emu/include/nes/ppu.h	/^	size_t framenum;$/;"	m	struct:ppu	typeref:typename:size_t
fread_print_error	emu/fileio.c	/^fread_print_error (FILE * f, const char * path)$/;"	f	typeref:typename:void
gen_nops	test/57_jmp2.s	/^.macro gen_nops count$/;"	m
get_ax	emu/mos6502/vmcall.c	/^get_ax (mos6502_t * cpu)$/;"	f	typeref:typename:uint16_t	file:
get_desc	test/test.py	/^def get_desc(name):$/;"	f
graceful_exit	scripts/submit.py	/^def graceful_exit(signal, frame):$/;"	f
greyscale_en	emu/include/nes/ppu.h	/^			bool greyscale_en   : 1;$/;"	m	struct:ppu::__anon7cc258ae010a::__anon7cc258ae0208	typeref:typename:bool:1
handin	Makefile	/^handin:$/;"	t
handle_args	emu/mos6502/vmcall.c	/^handle_args (mos6502_t * cpu)$/;"	f	typeref:typename:mos6502_step_result_t	file:
handle_close	emu/mos6502/vmcall.c	/^handle_close (mos6502_t * cpu)$/;"	f	typeref:typename:mos6502_step_result_t	file:
handle_cmd	emu/shell.c	/^handle_cmd (mos6502_t * cpu, char * line)$/;"	f	typeref:typename:int	file:
handle_dump	emu/mos6502/vmcall.c	/^handle_dump (mos6502_t * cpu)$/;"	f	typeref:typename:mos6502_step_result_t	file:
handle_exit	emu/mos6502/vmcall.c	/^handle_exit (mos6502_t * cpu)$/;"	f	typeref:typename:mos6502_step_result_t	file:
handle_irq	lib/intr.c	/^handle_irq (void)$/;"	f	typeref:typename:void
handle_irq	test/92_brk0.s	/^handle_irq:$/;"	l
handle_nmi	lib/intr.c	/^handle_nmi (void) $/;"	f	typeref:typename:void
handle_open	emu/mos6502/vmcall.c	/^handle_open (mos6502_t * cpu)$/;"	f	typeref:typename:mos6502_step_result_t	file:
handle_read	emu/mos6502/vmcall.c	/^handle_read (mos6502_t * cpu)$/;"	f	typeref:typename:mos6502_step_result_t	file:
handle_sigint	emu/shell.c	/^handle_sigint (int signum)$/;"	f	typeref:typename:void	file:
handle_vmcall	emu/mos6502/vmcall.c	/^handle_vmcall (mos6502_t * cpu, uint8_t call_num)$/;"	f	typeref:typename:mos6502_step_result_t
handle_write	emu/mos6502/vmcall.c	/^handle_write (mos6502_t * cpu)$/;"	f	typeref:typename:mos6502_step_result_t	file:
handler	emu/shell.c	/^	int (*handler)(mos6502_t *, char *);$/;"	m	struct:command_descriptor	typeref:typename:int (*)(mos6502_t *,char *)	file:
hawknest_magic	emu/main.c	/^static const uint8_t hawknest_magic[4] = {'H', 'K', 'N', 'S'};$/;"	v	typeref:typename:const uint8_t[4]	file:
hawknest_rom_load	emu/main.c	/^hawknest_rom_load (FILE * nonnull f, const char * nonnull path, reset_manager_t * nonnull rm, mo/;"	f	typeref:typename:int	file:
horiz_flipped	emu/include/nes/ppu.h	/^	bool horiz_flipped : 1;$/;"	m	struct:ppu_spriteattr	typeref:typename:bool:1
i	emu/include/mos6502/mos6502.h	/^		bool i : 1; \/\/ interrupt disable$/;"	m	struct:stat_reg::__anonfa668a2b0108	typeref:typename:bool:1
ignored	emu/ines.c	/^	uint8_t ignored[3];$/;"	m	struct:ines2_header	typeref:typename:uint8_t[3]	file:
ignored	emu/ines.c	/^	uint8_t ignored[6];$/;"	m	struct:ines1_header	typeref:typename:uint8_t[6]	file:
inc_coarse_x	emu/nes/ppu.c	/^inc_coarse_x (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
inc_vram_addr_rw	emu/nes/ppu.c	/^inc_vram_addr_rw (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
inc_y	emu/nes/ppu.c	/^inc_y (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
ines1_flags9	emu/ines.c	/^typedef struct ines1_flags9 {$/;"	s	file:
ines1_flags9_t	emu/ines.c	/^} ines1_flags9_t;$/;"	t	typeref:struct:ines1_flags9	file:
ines1_header	emu/ines.c	/^typedef struct ines1_header {$/;"	s	file:
ines1_header_t	emu/ines.c	/^} ines1_header_t;$/;"	t	typeref:struct:ines1_header	file:
ines2_flags10	emu/ines.c	/^typedef struct ines2_flags10 {$/;"	s	file:
ines2_flags10_t	emu/ines.c	/^} ines2_flags10_t;$/;"	t	typeref:struct:ines2_flags10	file:
ines2_flags11	emu/ines.c	/^typedef struct ines2_flags11 {$/;"	s	file:
ines2_flags11_t	emu/ines.c	/^} ines2_flags11_t;$/;"	t	typeref:struct:ines2_flags11	file:
ines2_flags12	emu/ines.c	/^typedef struct ines2_flags12 {$/;"	s	file:
ines2_flags12_t	emu/ines.c	/^} ines2_flags12_t;$/;"	t	typeref:struct:ines2_flags12	file:
ines2_flags8	emu/ines.c	/^typedef struct ines2_flags8 {$/;"	s	file:
ines2_flags8_t	emu/ines.c	/^} ines2_flags8_t;$/;"	t	typeref:struct:ines2_flags8	file:
ines2_flags9	emu/ines.c	/^typedef struct ines2_flags9 {$/;"	s	file:
ines2_flags9_t	emu/ines.c	/^} ines2_flags9_t;$/;"	t	typeref:struct:ines2_flags9	file:
ines2_header	emu/ines.c	/^typedef struct ines2_header {$/;"	s	file:
ines2_header_t	emu/ines.c	/^} ines2_header_t;$/;"	t	typeref:struct:ines2_header	file:
ines_magic	emu/main.c	/^static const uint8_t ines_magic[4] = {0x4E, 0x45, 0x53, 0x1A};$/;"	v	typeref:typename:const uint8_t[4]	file:
ines_mirroring	emu/include/ines.h	/^typedef enum ines_mirroring {$/;"	g
ines_mirroring_t	emu/include/ines.h	/^} PACKED ines_mirroring_t;$/;"	t	typeref:enum:ines_mirroring PACKED
inesrom_load	emu/ines.c	/^inesrom_load (FILE * f,$/;"	f	typeref:typename:int
init	test/89_jsr1.s	/^init:$/;"	l
initmainargs	lib/mainargs.s	/^initmainargs:$/;"	l
insert_bp	emu/shell.c	/^insert_bp (uint16_t bp_addr)$/;"	f	typeref:typename:int	file:
instr_cycles	emu/mos6502/mos6502.c	/^static const uint8_t instr_cycles[256] = {$/;"	v	typeref:typename:const uint8_t[256]	file:
intr	emu/include/mos6502/mos6502.h	/^typedef enum intr {$/;"	g
intr_status	emu/include/mos6502/mos6502.h	/^	intr_t intr_status;$/;"	m	struct:mos6502	typeref:typename:intr_t
intr_t	emu/include/mos6502/mos6502.h	/^} intr_t;$/;"	t	typeref:enum:intr
io_reg	emu/include/nes/io_reg.h	/^typedef struct io_reg {$/;"	s
io_reg_new	emu/nes/io_reg.c	/^io_reg_new (reset_manager_t * rm, mos6502_t * cpu, const char * cscheme_path)$/;"	f	typeref:typename:io_reg_t *
io_reg_setup	emu/nes/io_reg.c	/^io_reg_setup (reset_manager_t * rm, mos6502_t * cpu, const char * cscheme_path)$/;"	f	typeref:typename:int
io_reg_t	emu/include/nes/io_reg.h	/^} io_reg_t;$/;"	t	typeref:struct:io_reg
irq	lib/crt0.s	/^irq:$/;"	l
irq	test/92_brk0.s	/^irq: $/;"	l
is_failed	test/test.py	/^    def is_failed(self):$/;"	m	class:Test
is_passed	test/test.py	/^    def is_passed(self):$/;"	m	class:Test
is_prime	test/primes.c	/^int is_prime(unsigned int num)$/;"	f	typeref:typename:int
is_valid_bp	emu/shell.c	/^is_valid_bp (uint16_t bp_addr)$/;"	f	typeref:typename:bool	file:
isalpha	test/98_isalpha.s	/^isalpha:$/;"	l
last	scripts/submit.py	/^    last  = sanitize(input("Please enter your last name: "), 'last')$/;"	v
last_branch_delay	emu/include/mos6502/mos6502.h	/^	uint64_t last_branch_delay;$/;"	m	struct:mos6502	typeref:typename:uint64_t
last_cpu_cyclenum	emu/include/nes/mmc1.h	/^	uint64_t last_cpu_cyclenum;$/;"	m	struct:mmc1	typeref:typename:uint64_t
last_takeover_delay	emu/include/mos6502/mos6502.h	/^	uint64_t last_takeover_delay;$/;"	m	struct:mos6502	typeref:typename:uint64_t
lc	Makefile	/^lc = $(shell echo $(1) | tr A-Z a-z)$/;"	m
left_bg_en	emu/include/nes/ppu.h	/^			bool left_bg_en     : 1;$/;"	m	struct:ppu::__anon7cc258ae010a::__anon7cc258ae0208	typeref:typename:bool:1
left_sprite_en	emu/include/nes/ppu.h	/^			bool left_sprite_en : 1;$/;"	m	struct:ppu::__anon7cc258ae010a::__anon7cc258ae0208	typeref:typename:bool:1
lib	Makefile	/^lib: $(LIB)$/;"	t
load_rom	emu/main.c	/^load_rom (const char * nonnull path,$/;"	f	typeref:typename:int	file:
load_shiftregs	emu/nes/ppu.c	/^load_shiftregs (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
log	test/test.py	/^    def log(self, msg):$/;"	m	class:Test
long_options	emu/main.c	/^static struct option long_options[] = {$/;"	v	typeref:struct:option[]	file:
loop	test/89_jsr1.s	/^loop:$/;"	l
loop1	test/94_countdown.s	/^loop1:$/;"	l
loop2	test/94_countdown.s	/^loop2:$/;"	l
loopit	test/94_countdown.s	/^loopit:$/;"	l
main	emu/main.c	/^main (int argc, char ** argv)$/;"	f	typeref:typename:int
main	test/hello.c	/^int main (void)$/;"	f	typeref:typename:int
main	test/primes.c	/^main()$/;"	f	typeref:typename:int
main	test/test.py	/^def main(build_test, all_tests):$/;"	f
make	test/test.py	/^   def make(self, files=[], required=True):$/;"	m	class:BuildTest
make_vmc	lib/paravirt.s	/^.macro make_vmc name, callnum$/;"	m
make_vmc	lib/paravirt.s	/^make_vmc _break, $06$/;"	l
make_vmc	lib/paravirt.s	/^make_vmc _close, $03$/;"	l
make_vmc	lib/paravirt.s	/^make_vmc _dump,  $07$/;"	l
make_vmc	lib/paravirt.s	/^make_vmc _open,  $02$/;"	l
make_vmc	lib/paravirt.s	/^make_vmc _read,  $04$/;"	l
make_vmc	lib/paravirt.s	/^make_vmc _write, $05$/;"	l
make_vmc	lib/paravirt.s	/^make_vmc args,   $00$/;"	l
make_vmc	lib/paravirt.s	/^make_vmc exit,   $01$/;"	l
mapper_nib_high	emu/ines.c	/^	uint8_t mapper_nib_high : 4;$/;"	m	struct:flags7	typeref:typename:uint8_t:4	file:
mapper_nib_higher	emu/ines.c	/^	uint8_t mapper_nib_higher : 4;$/;"	m	struct:ines2_flags8	typeref:typename:uint8_t:4	file:
mapper_nib_low	emu/ines.c	/^	uint8_t mapper_nib_low : 4;$/;"	m	struct:flags6	typeref:typename:uint8_t:4	file:
mask	emu/include/nes/ppu.h	/^		uint8_t mask;$/;"	m	union:ppu::__anon7cc258ae010a	typeref:typename:uint8_t
maxm	test/95_max.s	/^maxm:$/;"	l
members	test/test.py	/^        members = {$/;"	v
membus	emu/include/membus.h	/^typedef struct membus {$/;"	s
membus_clear_page	emu/membus.c	/^membus_clear_page (membus_t * bus, size_t pagenum)$/;"	f	typeref:typename:void
membus_new	emu/membus.c	/^membus_new (reset_manager_t * rm)$/;"	f	typeref:typename:membus_t *
membus_read	emu/membus.c	/^membus_read (membus_t * bus, uint16_t addr)$/;"	f	typeref:typename:uint8_t
membus_set_read_handler	emu/membus.c	/^membus_set_read_handler (membus_t * bus, size_t pagenum, void * obj, size_t offset, void * handl/;"	f	typeref:typename:void
membus_set_read_memory	emu/membus.c	/^membus_set_read_memory (membus_t * bus, size_t pagenum, void * obj, void * data)$/;"	f	typeref:typename:void
membus_set_write_handler	emu/membus.c	/^membus_set_write_handler (membus_t * bus, size_t pagenum, void * obj, size_t offset, void * hand/;"	f	typeref:typename:void
membus_set_write_memory	emu/membus.c	/^membus_set_write_memory (membus_t * bus, size_t pagenum, void * obj, void * data)$/;"	f	typeref:typename:void
membus_t	emu/include/membus.h	/^} membus_t;$/;"	t	typeref:struct:membus
membus_write	emu/membus.c	/^membus_write (membus_t * bus, uint16_t addr, uint8_t val)$/;"	f	typeref:typename:void
memfetch	emu/nes/ppu.c	/^memfetch (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
memory	emu/include/memory.h	/^typedef struct memory {$/;"	s
memory_map	emu/memory.c	/^memory_map (memory_t * mem, membus_t * bus, uint16_t bus_start, uint16_t size, size_t start)$/;"	f	typeref:typename:void
memory_map_mirroring	emu/memory.c	/^memory_map_mirroring (memory_t * mem, membus_t * bus, uint16_t bus_start, uint16_t size, size_t /;"	f	typeref:typename:void
memory_new	emu/memory.c	/^memory_new (reset_manager_t * rm, size_t size, bool writeable)$/;"	f	typeref:typename:memory_t *
memory_t	emu/include/memory.h	/^} memory_t;$/;"	t	typeref:struct:memory
mirroring	emu/include/ines.h	/^	ines_mirroring_t mirroring;$/;"	m	struct:rominfo	typeref:typename:ines_mirroring_t
mirroring	emu/include/nes/mmc1.h	/^		mmc1_mirroring_t mirroring               : 2;$/;"	m	struct:mmc1_reg0::__anon0dcdd1e70108	typeref:typename:mmc1_mirroring_t:2
mirroring	emu/ines.c	/^	ines_mirroring_t mirroring : 1;$/;"	m	struct:flags6	typeref:typename:ines_mirroring_t:1	file:
mlt16	test/96_mult.s	/^mlt16:$/;"	l
mmc1	emu/include/nes/mmc1.h	/^typedef struct mmc1 {$/;"	s
mmc1	emu/nes/sxrom.c	/^	mmc1_t mmc1;$/;"	m	struct:sxrom	typeref:typename:mmc1_t	file:
mmc1_chr_switching	emu/include/nes/mmc1.h	/^typedef enum mmc1_chr_switching {$/;"	g
mmc1_chr_switching_t	emu/include/nes/mmc1.h	/^} PACKED mmc1_chr_switching_t;$/;"	t	typeref:enum:mmc1_chr_switching PACKED
mmc1_map_vram	emu/nes/mmc1.c	/^mmc1_map_vram (mmc1_t * mmc1, membus_t * bus, memory_t * vram)$/;"	f	typeref:typename:void
mmc1_mirroring	emu/include/nes/mmc1.h	/^typedef enum mmc1_mirroring {$/;"	g
mmc1_mirroring_t	emu/include/nes/mmc1.h	/^} PACKED mmc1_mirroring_t;$/;"	t	typeref:enum:mmc1_mirroring PACKED
mmc1_prgrom_fixation	emu/include/nes/mmc1.h	/^typedef enum mmc1_prgrom_fixation {$/;"	g
mmc1_prgrom_fixation_t	emu/include/nes/mmc1.h	/^} PACKED mmc1_prgrom_fixation_t;$/;"	t	typeref:enum:mmc1_prgrom_fixation PACKED
mmc1_prgrom_switching	emu/include/nes/mmc1.h	/^typedef enum mmc1_prgrom_switching {$/;"	g
mmc1_prgrom_switching_t	emu/include/nes/mmc1.h	/^} PACKED mmc1_prgrom_switching_t;$/;"	t	typeref:enum:mmc1_prgrom_switching PACKED
mmc1_reg0	emu/include/nes/mmc1.h	/^typedef union mmc1_reg0 {$/;"	u
mmc1_reg0_t	emu/include/nes/mmc1.h	/^} mmc1_reg0_t;$/;"	t	typeref:union:mmc1_reg0
mmc1_reg1	emu/include/nes/mmc1.h	/^typedef union mmc1_reg1 {$/;"	u
mmc1_reg1_t	emu/include/nes/mmc1.h	/^} mmc1_reg1_t;$/;"	t	typeref:union:mmc1_reg1
mmc1_reg2	emu/include/nes/mmc1.h	/^typedef union mmc1_reg2 {$/;"	u
mmc1_reg2_t	emu/include/nes/mmc1.h	/^} mmc1_reg2_t;$/;"	t	typeref:union:mmc1_reg2
mmc1_reg3	emu/include/nes/mmc1.h	/^typedef union mmc1_reg3 {$/;"	u
mmc1_reg3_t	emu/include/nes/mmc1.h	/^} mmc1_reg3_t;$/;"	t	typeref:union:mmc1_reg3
mmc1_reg_write	emu/nes/mmc1.c	/^mmc1_reg_write (mmc1_t * mmc1, size_t regnum, uint8_t val, uint64_t cpu_cyclenum)$/;"	f	typeref:typename:void
mmc1_reset	emu/nes/mmc1.c	/^mmc1_reset (mmc1_t * mmc1)$/;"	f	typeref:typename:void
mmc1_t	emu/include/nes/mmc1.h	/^} mmc1_t;$/;"	t	typeref:struct:mmc1
mode	emu/include/mos6502/mos6502.h	/^	addr_mode_t mode;$/;"	m	struct:decode_info	typeref:typename:addr_mode_t
mode	emu/mos6502/mos6502.c	/^  enum addr_mode mode;$/;"	m	struct:__anon00ba67f30108	typeref:enum:addr_mode	file:
mode	emu/mos6502/mos6502.c	/^  enum addr_mode mode;$/;"	m	struct:__anon00ba67f30308	typeref:enum:addr_mode	file:
mos6502	emu/include/mos6502/mos6502.h	/^typedef struct mos6502 {$/;"	s
mos6502_advance_clk	emu/mos6502/mos6502-common.c	/^void mos6502_advance_clk(mos6502_t* cpu, size_t ncycles) {$/;"	f	typeref:typename:void
mos6502_instr_repr	emu/mos6502/mos6502.c	/^size_t mos6502_instr_repr(mos6502_t* cpu, uint16_t addr, char* buffer,$/;"	f	typeref:typename:size_t
mos6502_new	emu/mos6502/mos6502-common.c	/^mos6502_t* mos6502_new(reset_manager_t* rm, timekeeper_t* tk,$/;"	f	typeref:typename:mos6502_t *
mos6502_raise_irq	emu/mos6502/mos6502-common.c	/^void mos6502_raise_irq(mos6502_t* cpu) { cpu->intr_status = INTR_IRQ; }$/;"	f	typeref:typename:void
mos6502_raise_nmi	emu/mos6502/mos6502-common.c	/^void mos6502_raise_nmi(mos6502_t* cpu) { cpu->intr_status = INTR_NMI; }$/;"	f	typeref:typename:void
mos6502_reset	emu/mos6502/mos6502-common.c	/^void mos6502_reset(mos6502_t* cpu) {$/;"	f	typeref:typename:void
mos6502_step	emu/mos6502/mos6502.c	/^mos6502_step_result_t mos6502_step(mos6502_t* cpu) {$/;"	f	typeref:typename:mos6502_step_result_t
mos6502_step_result	emu/include/mos6502/mos6502.h	/^typedef enum mos6502_step_result {$/;"	g
mos6502_step_result_t	emu/include/mos6502/mos6502.h	/^} PACKED mos6502_step_result_t;$/;"	t	typeref:enum:mos6502_step_result PACKED
mos6502_t	emu/include/mos6502/mos6502.h	/^} mos6502_t;$/;"	t	typeref:struct:mos6502
move_cursor	emu/nes/ppu.c	/^move_cursor (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
mp	test/test.py	/^import multiprocessing as mp$/;"	I
n	emu/include/mos6502/mos6502.h	/^		bool n : 1; \/\/ negative flag$/;"	m	struct:stat_reg::__anonfa668a2b0108	typeref:typename:bool:1
name	emu/mos6502/mos6502.c	/^  const char* name;$/;"	m	struct:__anon00ba67f30308	typeref:typename:const char *	file:
name	lib/paravirt.s	/^	name:$/;"	l
name	test/test.py	/^    name       = None$/;"	v	class:Test
name	test/test.py	/^    name      = None$/;"	v	class:HawknestTest
name	test/test.py	/^   name    = "build"$/;"	v	class:BuildTest
name	test/test.py	/^   name    = "hawknest-build"$/;"	v	class:HawknestBuild
nbb_chram_size	emu/ines.c	/^	uint8_t nbb_chram_size : 4;$/;"	m	struct:ines2_flags11	typeref:typename:uint8_t:4	file:
nbb_wram_size	emu/ines.c	/^	uint8_t nbb_wram_size : 4;$/;"	m	struct:ines2_flags10	typeref:typename:uint8_t:4	file:
ndevices	emu/include/reset_manager.h	/^	size_t ndevices;$/;"	m	struct:reset_manager	typeref:typename:size_t
newclass	test/test.py	/^        newclass = type(tname, (HawknestTest,), members)$/;"	v
next_dec	emu/shell.c	/^next_dec (char ** line_ptr, size_t * result)$/;"	f	typeref:typename:char *	file:
next_hex	emu/shell.c	/^next_hex (char ** line_ptr, size_t * result)$/;"	f	typeref:typename:char *	file:
next_scanline_has_sprite0	emu/include/nes/ppu.h	/^		bool next_scanline_has_sprite0 : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:bool:1
next_token	emu/shell.c	/^next_token (char ** line_ptr)$/;"	f	typeref:typename:char *	file:
nmi	lib/crt0.s	/^nmi:$/;"	l
nmi_en	emu/include/nes/ppu.h	/^		bool nmi_en          : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:bool:1
no_chg	test/95_max.s	/^no_chg:$/;"	l
nomore	test/97_sqrt.s	/^nomore:$/;"	l
nonnull	emu/include/base.h	/^#	define nonnull /;"	d
nonnull	emu/include/base.h	/^#	define nonnull$/;"	d
nrom_setup	emu/nes/nrom.c	/^nrom_setup (rominfo_t * info)$/;"	f	typeref:typename:int
nt_addr	emu/nes/ppu.c	/^nt_addr (ppu_t * nonnull ppu)$/;"	f	typeref:typename:uint16_t	file:
nt_baseaddr	emu/include/nes/ppu.h	/^			ppu_nt_baseaddr_t nt_baseaddr : 2;$/;"	m	struct:ppu::__anon7cc258ae040a::__anon7cc258ae0508	typeref:typename:ppu_nt_baseaddr_t:2
nt_latch	emu/include/nes/ppu.h	/^	uint8_t bmp_latch[2], nt_latch, attr_latch;$/;"	m	struct:ppu	typeref:typename:uint8_t[2]
ntimers	emu/include/timekeeper.h	/^	size_t ntimers;$/;"	m	struct:timekeeper	typeref:typename:size_t
nullable	emu/include/base.h	/^#	define nullable /;"	d
nullable	emu/include/base.h	/^#	define nullable$/;"	d
nullable	emu/include/membus.h	/^			uint8_t (* nullable handler)(void * nonnull, uint16_t, uint8_t * nonnull);$/;"	m	union:membus::__anon4372424d0108::__anon4372424d020a	typeref:typename:uint8_t (* handler)(void * nonnull,uint16_t,uint8_t * nonnull)
nullable	emu/include/membus.h	/^			void (* nullable handler)(void * nonnull, uint16_t, uint8_t);$/;"	m	union:membus::__anon4372424d0308::__anon4372424d040a	typeref:typename:void (* handler)(void * nonnull,uint16_t,uint8_t)
nullable	emu/include/rc.h	/^	void (*nullable deinit)(void * nonnull obj);$/;"	m	struct:rc	typeref:typename:void (* deinit)(void * nonnull obj)
nullable	emu/include/reset_manager.h	/^		void (*nullable handler)(void * nonnull dev);$/;"	m	struct:reset_manager::__anonb3491a410108	typeref:typename:void (* handler)(void * nonnull dev)
nullable	emu/include/timekeeper.h	/^		void (*nullable fire)(void * nonnull obj);$/;"	m	struct:timekeeper::__anon36987f4f0108	typeref:typename:void (* fire)(void * nonnull obj)
nxtbt	test/96_mult.s	/^nxtbt:$/;"	l
oam	emu/include/nes/ppu.h	/^		uint8_t oam[sizeof(ppu_sprite_t) * 64];$/;"	m	union:ppu::__anon7cc258ae080a	typeref:typename:uint8_t[]
oam_addr	emu/include/nes/ppu.h	/^	uint8_t oam_addr;$/;"	m	struct:ppu	typeref:typename:uint8_t
obj	emu/include/membus.h	/^		void * nullable \/*strong*\/ obj;$/;"	m	struct:membus::__anon4372424d0108	typeref:typename:void * nullable
obj	emu/include/membus.h	/^		void * nullable \/*strong*\/ obj;$/;"	m	struct:membus::__anon4372424d0308	typeref:typename:void * nullable
obj	emu/include/timekeeper.h	/^		void * nullable \/*strong*\/ obj;$/;"	m	struct:timekeeper::__anon36987f4f0108	typeref:typename:void * nullable
offset_p1	emu/include/membus.h	/^		size_t offset_p1; \/\/ offset + 1$/;"	m	struct:membus::__anon4372424d0108	typeref:typename:size_t
offset_p1	emu/include/membus.h	/^		size_t offset_p1; \/\/ offset + 1$/;"	m	struct:membus::__anon4372424d0308	typeref:typename:size_t
opcode	emu/include/mos6502/mos6502.h	/^	uint8_t opcode;$/;"	m	struct:decode_info	typeref:typename:uint8_t
opcode	emu/mos6502/mos6502.c	/^  uint8_t opcode;$/;"	m	struct:__anon00ba67f30108	typeref:typename:uint8_t	file:
open_files	test/test.py	/^    open_files = list()$/;"	v	class:Test
overflow_dotnum	emu/include/nes/ppu.h	/^	size_t overflow_dotnum;$/;"	m	struct:ppu	typeref:typename:size_t
p	emu/include/mos6502/mos6502.h	/^	stat_reg_t p; \/\/ processor status word$/;"	m	struct:mos6502	typeref:typename:stat_reg_t
palette	emu/include/nes/ppu.h	/^	uint8_t palette : 2;$/;"	m	struct:ppu_spriteattr	typeref:typename:uint8_t:2
palette_color	emu/include/nes/ppu.h	/^	uint8_t palette_color : 6;$/;"	m	struct:ppu_pixel	typeref:typename:uint8_t:6
palette_loc	emu/nes/ppu.c	/^palette_loc (ppu_t * nonnull ppu, uint16_t addr)$/;"	f	typeref:typename:uint8_t * nullable	file:
palette_mem	emu/include/nes/ppu.h	/^	uint8_t palette_mem[32];$/;"	m	struct:ppu	typeref:typename:uint8_t[32]
palette_srgb	emu/include/nes/ppu.h	/^	uint8_t palette_srgb[512][3];$/;"	m	struct:ppu	typeref:typename:uint8_t[512][3]
paravirt_argc	emu/include/mos6502/mos6502.h	/^	uint16_t paravirt_argc;$/;"	m	struct:mos6502	typeref:typename:uint16_t
paravirt_argv	emu/include/mos6502/mos6502.h	/^	char * nullable * nonnull \/*unowned*\/ paravirt_argv;$/;"	m	struct:mos6502	typeref:typename:char * nullable * nonnull
parser	scripts/submit.py	/^    parser = argparse.ArgumentParser(description='Client submission script for class projects')$/;"	v
parser	test/test.py	/^parser = OptionParser($/;"	v
pass	test/98_isalpha.s	/^pass:$/;"	l
pc	emu/include/mos6502/mos6502.h	/^	uint16_t pc;  \/\/ program counter$/;"	m	struct:mos6502	typeref:typename:uint16_t
playchoice_10	emu/ines.c	/^	bool playchoice_10 : 1;$/;"	m	struct:flags7	typeref:typename:bool:1	file:
point_val	test/test.py	/^    point_val  = 0$/;"	v	class:Test
point_val	test/test.py	/^    point_val = 0$/;"	v	class:HawknestTest
points	test/test.py	/^    def points(self):$/;"	m	class:Test
pop_parm	emu/mos6502/vmcall.c	/^pop_parm (mos6502_t * cpu, uint16_t incr)$/;"	f	typeref:typename:uint16_t	file:
post_req	scripts/submit.py	/^def post_req(server, port, pid, uid, first, last, data):$/;"	f
ppu	emu/include/ines.h	/^	ppu_t * nonnull \/*unowned*\/ ppu;$/;"	m	struct:rominfo	typeref:typename:ppu_t * nonnull
ppu	emu/include/nes/ppu.h	/^typedef struct ppu {$/;"	s
ppu	emu/nes/sxrom.c	/^	ppu_t * nonnull \/*unowned*\/ ppu;$/;"	m	struct:sxrom	typeref:typename:ppu_t * nonnull	file:
ppu_chr_baseaddr	emu/include/nes/ppu.h	/^typedef enum ppu_chr_baseaddr {$/;"	g
ppu_chr_baseaddr_t	emu/include/nes/ppu.h	/^} PACKED ppu_chr_baseaddr_t;$/;"	t	typeref:enum:ppu_chr_baseaddr PACKED
ppu_map	emu/nes/ppu.c	/^ppu_map (ppu_t * ppu)$/;"	f	typeref:typename:void
ppu_new	emu/nes/ppu.c	/^ppu_new (reset_manager_t * rm, mos6502_t * cpu, int scale)$/;"	f	typeref:typename:ppu_t *
ppu_nt_baseaddr	emu/include/nes/ppu.h	/^typedef enum ppu_nt_baseaddr {$/;"	g
ppu_nt_baseaddr_t	emu/include/nes/ppu.h	/^} PACKED ppu_nt_baseaddr_t;$/;"	t	typeref:enum:ppu_nt_baseaddr PACKED
ppu_pixel	emu/include/nes/ppu.h	/^typedef struct ppu_pixel {$/;"	s
ppu_pixel_t	emu/include/nes/ppu.h	/^} PACKED ppu_pixel_t;$/;"	t	typeref:struct:ppu_pixel PACKED
ppu_sprite	emu/include/nes/ppu.h	/^typedef struct ppu_sprite {$/;"	s
ppu_sprite_t	emu/include/nes/ppu.h	/^} ppu_sprite_t;$/;"	t	typeref:struct:ppu_sprite
ppu_spriteattr	emu/include/nes/ppu.h	/^typedef struct ppu_spriteattr {$/;"	s
ppu_spriteattr_t	emu/include/nes/ppu.h	/^} ppu_spriteattr_t;$/;"	t	typeref:struct:ppu_spriteattr
ppu_spritesize	emu/include/nes/ppu.h	/^typedef enum ppu_spritesize {$/;"	g
ppu_spritesize_t	emu/include/nes/ppu.h	/^} ppu_spritesize_t;$/;"	t	typeref:enum:ppu_spritesize
ppu_t	emu/include/nes/ppu.h	/^} ppu_t;$/;"	t	typeref:struct:ppu
ppu_vram_addr_inc	emu/include/nes/ppu.h	/^typedef enum ppu_vram_addr_inc {$/;"	g
ppu_vram_addr_inc_t	emu/include/nes/ppu.h	/^} PACKED ppu_vram_addr_inc_t;$/;"	t	typeref:enum:ppu_vram_addr_inc PACKED
present_frame	emu/nes/ppu.c	/^present_frame (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
pretty_print	scripts/submit.py	/^def pretty_print(text):$/;"	f
prgrom	emu/include/ines.h	/^	memory_t * nullable \/*unowned*\/ prgrom;$/;"	m	struct:rominfo	typeref:typename:memory_t * nullable
prgrom	emu/nes/sxrom.c	/^	memory_t * nonnull \/*strong*\/ prgrom;$/;"	m	struct:sxrom	typeref:typename:memory_t * nonnull	file:
prgrom_fixation	emu/include/nes/mmc1.h	/^		mmc1_prgrom_fixation_t prgrom_fixation   : 1;$/;"	m	struct:mmc1_reg0::__anon0dcdd1e70108	typeref:typename:mmc1_prgrom_fixation_t:1
prgrom_size	emu/ines.c	/^	uint8_t prgrom_size;$/;"	m	struct:common_header	typeref:typename:uint8_t	file:
prgrom_size_nib	emu/ines.c	/^	uint8_t prgrom_size_nib : 4;$/;"	m	struct:ines2_flags9	typeref:typename:uint8_t:4	file:
prgrom_switching	emu/include/nes/mmc1.h	/^		mmc1_prgrom_switching_t prgrom_switching : 1;$/;"	m	struct:mmc1_reg0::__anon0dcdd1e70108	typeref:typename:mmc1_prgrom_switching_t:1
print_pc_update	emu/shell.c	/^print_pc_update (mos6502_t * cpu)$/;"	f	typeref:typename:void	file:
print_usage	emu/main.c	/^print_usage (char ** argv)$/;"	f	typeref:typename:void	file:
print_usage	emu/shell.c	/^print_usage (void)$/;"	f	typeref:typename:void	file:
print_version	emu/main.c	/^print_version (void)$/;"	f	typeref:typename:void	file:
quit_now	test/test.py	/^def quit_now(test):$/;"	f
rc	emu/include/rc.h	/^typedef struct rc {$/;"	s
rc_alloc	emu/rc.c	/^rc_alloc (size_t size, void * deinit)$/;"	f	typeref:typename:void *
rc_release	emu/rc.c	/^rc_release (void * obj)$/;"	f	typeref:typename:void
rc_retain	emu/rc.c	/^rc_retain (void * obj)$/;"	f	typeref:typename:void *
rc_t	emu/include/rc.h	/^} rc_t;$/;"	t	typeref:struct:rc
rc_weak_check	emu/rc.c	/^rc_weak_check (void ** obj_ptr)$/;"	f	typeref:typename:void *
rc_weak_release	emu/rc.c	/^rc_weak_release (void * nonnull obj)$/;"	f	typeref:typename:void
rc_weak_retain	emu/rc.c	/^rc_weak_retain (void * obj)$/;"	f	typeref:typename:void *
read	emu/nes/io_reg.c	/^read (io_reg_t * io, uint16_t addr, uint8_t * lanemask)$/;"	f	typeref:typename:uint8_t	file:
read	emu/nes/ppu.c	/^read (ppu_t * nonnull ppu, uint16_t addr)$/;"	f	typeref:typename:uint8_t	file:
read16	emu/mos6502/mos6502.c	/^static inline uint16_t read16(mos6502_t* cpu, uint16_t addr) {$/;"	f	typeref:typename:uint16_t	file:
read8	emu/mos6502/mos6502.c	/^static inline uint8_t read8(mos6502_t* cpu, uint16_t addr) {$/;"	f	typeref:typename:uint8_t	file:
read_mappings	emu/include/membus.h	/^	} read_mappings[MEMBUS_NPAGES];$/;"	m	struct:membus	typeref:struct:membus::__anon4372424d0108[]
read_zp16	emu/mos6502/vmcall.c	/^read_zp16 (mos6502_t * cpu, uint8_t addr)$/;"	f	typeref:typename:uint16_t	file:
reg0	emu/include/nes/mmc1.h	/^	mmc1_reg0_t reg0;$/;"	m	struct:mmc1	typeref:typename:mmc1_reg0_t
reg1	emu/include/nes/mmc1.h	/^	mmc1_reg1_t reg1;$/;"	m	struct:mmc1	typeref:typename:mmc1_reg1_t
reg2	emu/include/nes/mmc1.h	/^	mmc1_reg2_t reg2;$/;"	m	struct:mmc1	typeref:typename:mmc1_reg2_t
reg3	emu/include/nes/mmc1.h	/^	mmc1_reg3_t reg3;$/;"	m	struct:mmc1	typeref:typename:mmc1_reg3_t
reg_write	emu/nes/sxrom.c	/^reg_write (sxrom_t * cart, size_t addr, uint8_t val)$/;"	f	typeref:typename:void	file:
remap	emu/nes/sxrom.c	/^remap (sxrom_t * cart)$/;"	f	typeref:typename:void	file:
remove_bp	emu/shell.c	/^remove_bp (uint16_t bp_addr)$/;"	f	typeref:typename:int	file:
rend	emu/include/nes/ppu.h	/^	struct SDL_Renderer * nonnull \/*owned*\/ rend;$/;"	m	struct:ppu	typeref:struct:SDL_Renderer * nonnull
reserved	emu/ines.c	/^	uint8_t reserved : 6;$/;"	m	struct:ines2_flags12	typeref:typename:uint8_t:6	file:
reserved	emu/ines.c	/^	uint8_t reserved : 7;$/;"	m	struct:ines1_flags9	typeref:typename:uint8_t:7	file:
reset	emu/membus.c	/^reset (membus_t * nonnull bus)$/;"	f	typeref:typename:void	file:
reset	emu/memory.c	/^reset (memory_t * memory)$/;"	f	typeref:typename:void	file:
reset	emu/nes/io_reg.c	/^reset (io_reg_t * io)$/;"	f	typeref:typename:void	file:
reset	emu/nes/ppu.c	/^reset (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
reset	emu/nes/sxrom.c	/^reset (sxrom_t * cart)$/;"	f	typeref:typename:void	file:
reset	emu/timekeeper.c	/^reset (timekeeper_t * tk)$/;"	f	typeref:typename:void	file:
reset_manager	emu/include/reset_manager.h	/^typedef struct reset_manager {$/;"	s
reset_manager_add_device	emu/reset_manager.c	/^reset_manager_add_device (reset_manager_t * rm, void * dev, void * handler)$/;"	f	typeref:typename:void
reset_manager_issue_reset	emu/reset_manager.c	/^reset_manager_issue_reset (reset_manager_t * rm)$/;"	f	typeref:typename:void
reset_manager_new	emu/reset_manager.c	/^reset_manager_new (void)$/;"	f	typeref:typename:reset_manager_t *
reset_manager_t	emu/include/reset_manager.h	/^} reset_manager_t;$/;"	t	typeref:struct:reset_manager
reset_shiftreg	emu/nes/mmc1.c	/^reset_shiftreg (mmc1_t * mmc1)$/;"	f	typeref:typename:void	file:
rm	emu/include/ines.h	/^	reset_manager_t * nonnull \/*unowned*\/ rm;$/;"	m	struct:rominfo	typeref:typename:reset_manager_t * nonnull
rominfo	emu/include/ines.h	/^typedef struct rominfo {$/;"	s
rominfo_t	emu/include/ines.h	/^} rominfo_t;$/;"	t	typeref:struct:rominfo
routine	test/58_jsr0.s	/^routine:$/;"	l
routine	test/59_rts0.s	/^routine:$/;"	l
run	test/test.py	/^    def run(self): $/;"	m	class:HawknestTest
run	test/test.py	/^   def run(self):$/;"	m	class:BuildTest
run-unit-tests	Makefile	/^run-unit-tests:$/;"	t
run_shell	emu/shell.c	/^run_shell (mos6502_t * cpu, bool interactive)$/;"	f	typeref:typename:void
run_test	test/test.py	/^def run_test(test, queue):$/;"	f
run_util	test/test.py	/^    def run_util(self, args):$/;"	m	class:Test
sanitize	scripts/submit.py	/^def sanitize(text, field):$/;"	f
scanline_has_sprite0	emu/include/nes/ppu.h	/^		bool scanline_has_sprite0      : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:bool:1
set_ax	emu/mos6502/vmcall.c	/^set_ax (mos6502_t * cpu, uint16_t val)$/;"	f	typeref:typename:void	file:
set_delayed_regs	emu/nes/ppu.c	/^set_delayed_regs (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
set_it	test/77_bvc0.s	/^set_it:$/;"	l
set_it	test/78_bvc1.s	/^set_it:$/;"	l
set_it	test/79_bvs0.s	/^set_it:$/;"	l
set_it	test/80_bvs2.s	/^set_it:$/;"	l
set_strobe	emu/nes/io_reg.c	/^set_strobe (io_reg_t * io, bool val)$/;"	f	typeref:typename:void	file:
setup_common	emu/ines.c	/^setup_common (reset_manager_t * nonnull rm,$/;"	f	typeref:typename:ppu_t * nullable	file:
shift_shiftregs	emu/nes/ppu.c	/^shift_shiftregs (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
shiftreg	emu/include/nes/mmc1.h	/^	uint8_t shiftreg;$/;"	m	struct:mmc1	typeref:typename:uint8_t
sigint_action	emu/shell.c	/^static const struct sigaction sigint_action = {.sa_handler = handle_sigint};$/;"	v	typeref:typename:const struct sigaction	file:
sigint_received	emu/shell.c	/^static bool sigint_received;$/;"	v	typeref:typename:bool	file:
size	emu/include/memory.h	/^	size_t size;$/;"	m	struct:memory	typeref:typename:size_t
slnum	emu/include/nes/ppu.h	/^	size_t slnum;$/;"	m	struct:ppu	typeref:typename:size_t
sp	emu/include/mos6502/mos6502.h	/^	uint8_t sp;   \/\/ stack pointer$/;"	m	struct:mos6502	typeref:typename:uint8_t
spellings	emu/shell.c	/^	const char * const * spellings;$/;"	m	struct:command_descriptor	typeref:typename:const char * const *	file:
sprite0_hit	emu/include/nes/ppu.h	/^		bool sprite0_hit     : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:bool:1
sprite0_hit_shouldset	emu/include/nes/ppu.h	/^		bool sprite0_hit_shouldset : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:bool:1
sprite_attrs	emu/include/nes/ppu.h	/^	ppu_spriteattr_t sprite_attrs[8];$/;"	m	struct:ppu	typeref:typename:ppu_spriteattr_t[8]
sprite_bmp_shiftregs	emu/include/nes/ppu.h	/^	uint8_t sprite_bmp_shiftregs[8][2];$/;"	m	struct:ppu	typeref:typename:uint8_t[8][2]
sprite_chr_baseaddr	emu/include/nes/ppu.h	/^		ppu_chr_baseaddr_t sprite_chr_baseaddr : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:ppu_chr_baseaddr_t:1
sprite_en	emu/include/nes/ppu.h	/^			bool sprite_en      : 1;$/;"	m	struct:ppu::__anon7cc258ae010a::__anon7cc258ae0208	typeref:typename:bool:1
sprite_memfetch	emu/nes/ppu.c	/^sprite_memfetch (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
sprite_overflow	emu/include/nes/ppu.h	/^		bool sprite_overflow : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:bool:1
sprite_xs	emu/include/nes/ppu.h	/^	uint8_t sprite_xs[8];$/;"	m	struct:ppu	typeref:typename:uint8_t[8]
spriteeval	emu/nes/ppu.c	/^spriteeval (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
sprites	emu/include/nes/ppu.h	/^		ppu_sprite_t sprites[64];$/;"	m	union:ppu::__anon7cc258ae080a	typeref:typename:ppu_sprite_t[64]
spritesize	emu/include/nes/ppu.h	/^		ppu_spritesize_t spritesize            : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:ppu_spritesize_t:1
sqrt16	test/97_sqrt.s	/^sqrt16:  $/;"	l
start	lib/crt0.s	/^start:$/;"	l
stat_reg	emu/include/mos6502/mos6502.h	/^typedef union stat_reg {$/;"	u
stat_reg_t	emu/include/mos6502/mos6502.h	/^} stat_reg_t;$/;"	t	typeref:union:stat_reg
step	emu/nes/ppu.c	/^step (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
strong_count	emu/include/rc.h	/^	size_t strong_count;$/;"	m	struct:rc	typeref:typename:size_t
submapper	emu/ines.c	/^	uint8_t submapper : 4;$/;"	m	struct:ines2_flags8	typeref:typename:uint8_t:4	file:
sxrom	emu/nes/sxrom.c	/^typedef struct sxrom {$/;"	s	file:
sxrom_setup	emu/nes/sxrom.c	/^sxrom_setup (rominfo_t * info)$/;"	f	typeref:typename:int
sxrom_t	emu/nes/sxrom.c	/^} sxrom_t;$/;"	t	typeref:struct:sxrom	file:
t_pause	emu/include/timekeeper.h	/^	uint32_t t_pause;$/;"	m	struct:timekeeper	typeref:typename:uint32_t
t_ref	emu/include/timekeeper.h	/^	uint32_t t_ref;$/;"	m	struct:timekeeper	typeref:typename:uint32_t
target2	test/55_jmp0.s	/^target2:$/;"	l
targets	test/test.py	/^    targets = ["tests"]$/;"	v	class:HawknestTest
targets	test/test.py	/^   targets = None$/;"	v	class:BuildTest
targets	test/test.py	/^   targets = ["emu"]$/;"	v	class:HawknestBuild
tdesc	test/test.py	/^        tdesc = get_desc(tfile)$/;"	v
terminate	test/test.py	/^    def terminate(self):$/;"	m	class:Test
test	test/00_lda0.s	/^test:$/;"	l
test	test/01_lda1.s	/^test:$/;"	l
test	test/03_sta0.s	/^test:$/;"	l
test	test/04_sta1.s	/^test:$/;"	l
test	test/05_adc0.s	/^test:$/;"	l
test	test/06_adc1.s	/^test:$/;"	l
test	test/09_ldx0.s	/^test:$/;"	l
test	test/10_ldx1.s	/^test:$/;"	l
test	test/11_ldy0.s	/^test:$/;"	l
test	test/12_ldy1.s	/^test:$/;"	l
test	test/13_stx0.s	/^test:$/;"	l
test	test/14_sty0.s	/^test:$/;"	l
test	test/15_sty1.s	/^test:$/;"	l
test	test/16_and0.s	/^test:$/;"	l
test	test/17_and1.s	/^test:$/;"	l
test	test/18_and2.s	/^test:$/;"	l
test	test/19_asl0.s	/^test:$/;"	l
test	test/20_asl1.s	/^test:$/;"	l
test	test/21_sec0.s	/^test:$/;"	l
test	test/22_clc0.s	/^test:$/;"	l
test	test/23_sed0.s	/^test:$/;"	l
test	test/24_sei0.s	/^test:$/;"	l
test	test/25_nop0.s	/^test:$/;"	l
test	test/26_ora0.s	/^test:$/;"	l
test	test/27_ora1.s	/^test:$/;"	l
test	test/28_cld0.s	/^test:$/;"	l
test	test/29_inc0.s	/^test:$/;"	l
test	test/30_inc1.s	/^test:$/;"	l
test	test/31_dec0.s	/^test:$/;"	l
test	test/32_inx0.s	/^test:$/;"	l
test	test/33_dex0.s	/^test:$/;"	l
test	test/34_iny0.s	/^test:$/;"	l
test	test/35_dey0.s	/^test:$/;"	l
test	test/36_tax0.s	/^test:$/;"	l
test	test/37_tax1.s	/^test:$/;"	l
test	test/38_tax2.s	/^test:$/;"	l
test	test/39_tay0.s	/^test:$/;"	l
test	test/40_txa0.s	/^test:$/;"	l
test	test/41_tya0.s	/^test:$/;"	l
test	test/42_pha0.s	/^test:$/;"	l
test	test/43_pla0.s	/^test:$/;"	l
test	test/44_tsx0.s	/^test:$/;"	l
test	test/45_txs0.s	/^test:$/;"	l
test	test/46_sbc0.s	/^test:$/;"	l
test	test/47_sbc1.s	/^test:$/;"	l
test	test/48_adc4.s	/^test:$/;"	l
test	test/49_plp0.s	/^test:$/;"	l
test	test/50_rol0.s	/^test:$/;"	l
test	test/51_rol1.s	/^test:$/;"	l
test	test/52_rol2.s	/^test:$/;"	l
test	test/53_ror0.s	/^test:$/;"	l
test	test/54_ror1.s	/^test:$/;"	l
test	test/55_jmp0.s	/^test:$/;"	l
test	test/56_jmp1.s	/^test:$/;"	l
test	test/57_jmp2.s	/^test:$/;"	l
test	test/58_jsr0.s	/^test:$/;"	l
test	test/59_rts0.s	/^test:$/;"	l
test	test/60_cmp0.s	/^test:$/;"	l
test	test/61_cmp1.s	/^test:$/;"	l
test	test/62_cpx0.s	/^test:$/;"	l
test	test/63_cpx1.s	/^test:$/;"	l
test	test/64_cpy0.s	/^test:$/;"	l
test	test/65_bcc0.s	/^test:$/;"	l
test	test/66_bcc1.s	/^test:$/;"	l
test	test/67_bcs0.s	/^test:$/;"	l
test	test/68_bcs1.s	/^test:$/;"	l
test	test/69_beq0.s	/^test:$/;"	l
test	test/70_beq1.s	/^test:$/;"	l
test	test/71_bne0.s	/^test:$/;"	l
test	test/72_bne1.s	/^test:$/;"	l
test	test/73_bpl0.s	/^test:$/;"	l
test	test/74_bpl1.s	/^test:$/;"	l
test	test/75_bmi0.s	/^test:$/;"	l
test	test/76_bmi1.s	/^test:$/;"	l
test	test/77_bvc0.s	/^test:$/;"	l
test	test/78_bvc1.s	/^test:$/;"	l
test	test/79_bvs0.s	/^test:$/;"	l
test	test/80_bvs2.s	/^test:$/;"	l
test	test/81_bit0.s	/^test:$/;"	l
test	test/82_absx.s	/^test:$/;"	l
test	test/83_absy.s	/^test:$/;"	l
test	test/84_zpx0.s	/^test:$/;"	l
test	test/85_idxidr.s	/^test:$/;"	l
test	test/86_idridx.s	/^test:$/;"	l
test	test/87_zpy0.s	/^test:$/;"	l
test	test/88_absy0.s	/^test:$/;"	l
test	test/89_jsr1.s	/^test:$/;"	l
test	test/90_eor0.s	/^test:$/;"	l
test	test/91_eor1.s	/^test:$/;"	l
test	test/92_brk0.s	/^test:$/;"	l
test	test/93_addrmode0.s	/^test:$/;"	l
test	test/94_countdown.s	/^test:$/;"	l
test	test/95_max.s	/^test:$/;"	l
test	test/96_mult.s	/^test:$/;"	l
test	test/97_sqrt.s	/^test:$/;"	l
test	test/98_isalpha.s	/^test:$/;"	l
test_cnt	test/test.py	/^    test_cnt   = 0$/;"	v
test_val	test/test.py	/^    test_val = 100\/test_cnt$/;"	v
tester	test/test.py	/^    tester    = ""$/;"	v	class:HawknestTest
tests	Makefile	/^tests: $(CTESTS) $(ASMTESTS)$/;"	t
tex	emu/include/nes/ppu.h	/^	struct SDL_Texture * nonnull \/*owned*\/ tex;$/;"	m	struct:ppu	typeref:struct:SDL_Texture * nonnull
texdata	emu/include/nes/ppu.h	/^	uint8_t * nonnull \/*unowned*\/ texdata;$/;"	m	struct:ppu	typeref:typename:uint8_t * nonnull
texpitch	emu/include/nes/ppu.h	/^	size_t texpitch;$/;"	m	struct:ppu	typeref:typename:size_t
tile	emu/include/nes/ppu.h	/^	uint8_t tile;$/;"	m	struct:ppu_sprite	typeref:typename:uint8_t
timekeeper	emu/include/timekeeper.h	/^typedef struct timekeeper {$/;"	s
timekeeper_add_timer	emu/timekeeper.c	/^timekeeper_add_timer (timekeeper_t * tk, void * timer, void * fire, uint64_t * countdown)$/;"	f	typeref:typename:void
timekeeper_advance_clk	emu/timekeeper.c	/^timekeeper_advance_clk (timekeeper_t * tk, uint64_t ncycles)$/;"	f	typeref:typename:void
timekeeper_new	emu/timekeeper.c	/^timekeeper_new (reset_manager_t * rm, double clk_period)$/;"	f	typeref:typename:timekeeper_t *
timekeeper_pause	emu/timekeeper.c	/^timekeeper_pause (timekeeper_t * tk)$/;"	f	typeref:typename:void
timekeeper_resume	emu/timekeeper.c	/^timekeeper_resume (timekeeper_t * tk)$/;"	f	typeref:typename:void
timekeeper_sync	emu/timekeeper.c	/^timekeeper_sync (timekeeper_t * tk)$/;"	f	typeref:typename:void
timekeeper_t	emu/include/timekeeper.h	/^} timekeeper_t;$/;"	t	typeref:struct:timekeeper
timeout	test/test.py	/^    timeout    = None$/;"	v	class:Test
timeout	test/test.py	/^    timeout   = 5$/;"	v	class:HawknestTest
timeout	test/test.py	/^   timeout = 10$/;"	v	class:BuildTest
timeout	test/test.py	/^   timeout = 20$/;"	v	class:HawknestBuild
timers	emu/include/timekeeper.h	/^	} timers[TIMEKEEPER_MAX_TIMERS];$/;"	m	struct:timekeeper	typeref:struct:timekeeper::__anon36987f4f0108[]
tk	emu/include/mos6502/mos6502.h	/^	struct timekeeper * nonnull \/*strong*\/ tk;$/;"	m	struct:mos6502	typeref:struct:timekeeper * nonnull
tmp_coarse_xscroll	emu/include/nes/ppu.h	/^			uint8_t tmp_coarse_xscroll        : 5;$/;"	m	struct:ppu::__anon7cc258ae060a::__anon7cc258ae0708	typeref:typename:uint8_t:5
tmp_coarse_yscroll	emu/include/nes/ppu.h	/^			uint8_t tmp_coarse_yscroll        : 5;$/;"	m	struct:ppu::__anon7cc258ae060a::__anon7cc258ae0708	typeref:typename:uint8_t:5
tmp_fine_yscroll	emu/include/nes/ppu.h	/^			uint8_t tmp_fine_yscroll          : 3;$/;"	m	struct:ppu::__anon7cc258ae060a::__anon7cc258ae0708	typeref:typename:uint8_t:3
tmp_nt_baseaddr	emu/include/nes/ppu.h	/^			ppu_nt_baseaddr_t tmp_nt_baseaddr : 2;$/;"	m	struct:ppu::__anon7cc258ae060a::__anon7cc258ae0708	typeref:typename:ppu_nt_baseaddr_t:2
tmp_vram_addr	emu/include/nes/ppu.h	/^		uint16_t tmp_vram_addr;$/;"	m	union:ppu::__anon7cc258ae060a	typeref:typename:uint16_t
tname	test/test.py	/^        tname = os.path.splitext(tfile)[0]$/;"	v
trainer_present	emu/ines.c	/^	bool trainer_present : 1;$/;"	m	struct:flags6	typeref:typename:bool:1	file:
try_fopen	emu/fileio.c	/^try_fopen (const char * path, const char * mode)$/;"	f	typeref:typename:FILE *
try_fread	emu/fileio.c	/^try_fread (FILE * f, const char * path, void * dest, size_t nbytes)$/;"	f	typeref:typename:int
try_next_dec	emu/shell.c	/^try_next_dec (char ** line_ptr, size_t * result)$/;"	f	typeref:typename:int	file:
try_next_hex	emu/shell.c	/^try_next_hex (char ** line_ptr, size_t * result)$/;"	f	typeref:typename:int	file:
tv_type	emu/ines.c	/^	tv_type_t tv_type : 1;$/;"	m	struct:ines1_flags9	typeref:typename:tv_type_t:1	file:
tv_type	emu/ines.c	/^	tv_type_t tv_type : 1;$/;"	m	struct:ines2_flags12	typeref:typename:tv_type_t:1	file:
tv_type	emu/ines.c	/^typedef enum tv_type {$/;"	g	file:
tv_type_t	emu/ines.c	/^} PACKED tv_type_t;$/;"	t	typeref:enum:tv_type PACKED	file:
uid	scripts/submit.py	/^    uid   = sanitize(input("Please enter your student ID: "), 'uid')$/;"	v
universal	emu/ines.c	/^	bool universal : 1;$/;"	m	struct:ines2_flags12	typeref:typename:bool:1	file:
unused4k	emu/include/nes/mmc1.h	/^        uint8_t unused4k  : 3;$/;"	m	struct:mmc1_reg1::__anon0dcdd1e70208	typeref:typename:uint8_t:3
unused4k	emu/include/nes/mmc1.h	/^        uint8_t unused4k  : 3;$/;"	m	struct:mmc1_reg2::__anon0dcdd1e70408	typeref:typename:uint8_t:3
unused8k	emu/include/nes/mmc1.h	/^        uint8_t unused8k  : 1;$/;"	m	struct:mmc1_reg1::__anon0dcdd1e70308	typeref:typename:uint8_t:1
update_vram_addr	emu/nes/ppu.c	/^update_vram_addr (ppu_t * nonnull ppu)$/;"	f	typeref:typename:void	file:
usage	emu/shell.c	/^	const char * usage;$/;"	m	struct:command_descriptor	typeref:typename:const char *	file:
v	emu/include/mos6502/mos6502.h	/^		bool v : 1; \/\/ overflow flag$/;"	m	struct:stat_reg::__anonfa668a2b0108	typeref:typename:bool:1
val	emu/include/mos6502/mos6502.h	/^	uint8_t val;$/;"	m	union:stat_reg	typeref:typename:uint8_t
val	emu/include/nes/mmc1.h	/^	uint8_t val;$/;"	m	union:mmc1_reg0	typeref:typename:uint8_t
val	emu/include/nes/mmc1.h	/^	uint8_t val;$/;"	m	union:mmc1_reg3	typeref:typename:uint8_t
val	emu/include/nes/mmc1.h	/^    uint8_t val;$/;"	m	union:mmc1_reg1	typeref:typename:uint8_t
val	emu/include/nes/mmc1.h	/^    uint8_t val;$/;"	m	union:mmc1_reg2	typeref:typename:uint8_t
valid	emu/mos6502/mos6502.c	/^  uint8_t valid;  \/\/ default to 0, I think, 1 is valid$/;"	m	struct:__anon00ba67f30308	typeref:typename:uint8_t	file:
valid	emu/mos6502/mos6502.c	/^  uint8_t valid;$/;"	m	struct:__anon00ba67f30108	typeref:typename:uint8_t	file:
vblank	emu/include/nes/ppu.h	/^		bool vblank          : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:bool:1
version	emu/ines.c	/^	uint8_t version : 2;$/;"	m	struct:flags7	typeref:typename:uint8_t:2	file:
verti_flipped	emu/include/nes/ppu.h	/^	bool verti_flipped : 1;$/;"	m	struct:ppu_spriteattr	typeref:typename:bool:1
vram	emu/include/ines.h	/^	memory_t * nullable \/*unowned*\/ vram;$/;"	m	struct:rominfo	typeref:typename:memory_t * nullable
vram	emu/nes/sxrom.c	/^	memory_t * nonnull \/*strong*\/ vram;$/;"	m	struct:sxrom	typeref:typename:memory_t * nonnull	file:
vram_addr	emu/include/nes/ppu.h	/^		uint16_t vram_addr;$/;"	m	union:ppu::__anon7cc258ae040a	typeref:typename:uint16_t
vram_addr_inc	emu/include/nes/ppu.h	/^		ppu_vram_addr_inc_t vram_addr_inc      : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:ppu_vram_addr_inc_t:1
vram_read_buf	emu/include/nes/ppu.h	/^	uint8_t vram_read_buf;$/;"	m	struct:ppu	typeref:typename:uint8_t
vs_unisystem	emu/ines.c	/^	bool vs_unisystem : 1;$/;"	m	struct:flags7	typeref:typename:bool:1	file:
warn	test/test.py	/^    def warn(self, reason):$/;"	m	class:Test
weak_count	emu/include/rc.h	/^	size_t weak_count;$/;"	m	struct:rc	typeref:typename:size_t
widget_func_t	emu/mos6502/mos6502.c	/^typedef void (*widget_func_t)(mos6502_t*, enc_t*);$/;"	t	typeref:typename:void (*)(mos6502_t *,enc_t *)	file:
widget_t	emu/mos6502/mos6502.c	/^} widget_t;$/;"	t	typeref:struct:__anon00ba67f30308	file:
widgets	emu/mos6502/mos6502.c	/^static const widget_t widgets[256] = {$/;"	v	typeref:typename:const widget_t[256]	file:
widgets	emu/mos6502/mos6502.c	/^static const widget_t widgets[];$/;"	v	typeref:typename:const widget_t[]	file:
win	emu/include/nes/ppu.h	/^	struct SDL_Window * nonnull \/*owned*\/ win;$/;"	m	struct:ppu	typeref:struct:SDL_Window * nonnull
wram	emu/include/ines.h	/^	memory_t * nullable \/*unowned*\/ wram;$/;"	m	struct:rominfo	typeref:typename:memory_t * nullable
wram	emu/nes/sxrom.c	/^	memory_t * nullable \/*strong*\/ wram;$/;"	m	struct:sxrom	typeref:typename:memory_t * nullable	file:
wram_disabled	emu/include/nes/mmc1.h	/^		bool wram_disabled : 1;$/;"	m	struct:mmc1_reg3::__anon0dcdd1e70508	typeref:typename:bool:1
wram_present	emu/ines.c	/^	bool wram_present : 1;$/;"	m	struct:flags6	typeref:typename:bool:1	file:
wram_size	emu/ines.c	/^	uint8_t wram_size;$/;"	m	struct:ines1_header	typeref:typename:uint8_t	file:
write	emu/nes/io_reg.c	/^write (io_reg_t * io, uint16_t addr, uint8_t val)$/;"	f	typeref:typename:void	file:
write	emu/nes/ppu.c	/^write (ppu_t * nonnull ppu, uint16_t addr, uint8_t val)$/;"	f	typeref:typename:void	file:
write16	emu/mos6502/vmcall.c	/^write16 (mos6502_t * cpu, uint16_t addr, uint16_t val)$/;"	f	typeref:typename:void	file:
write8	emu/mos6502/mos6502.c	/^static inline void write8(mos6502_t* cpu, uint16_t addr, uint8_t val) {$/;"	f	typeref:typename:void	file:
write_mappings	emu/include/membus.h	/^	} write_mappings[MEMBUS_NPAGES];$/;"	m	struct:membus	typeref:struct:membus::__anon4372424d0308[]
write_toggle	emu/include/nes/ppu.h	/^		bool write_toggle    : 1;$/;"	m	struct:ppu::__anon7cc258ae0308	typeref:typename:bool:1
writeable	emu/include/memory.h	/^	bool writeable;$/;"	m	struct:memory	typeref:typename:bool
x	emu/include/mos6502/mos6502.h	/^	uint8_t x;    \/\/ GPR 1$/;"	m	struct:mos6502	typeref:typename:uint8_t
xpos	emu/include/nes/ppu.h	/^	uint8_t xpos;$/;"	m	struct:ppu_sprite	typeref:typename:uint8_t
y	emu/include/mos6502/mos6502.h	/^	uint8_t y;    \/\/ GPR 2$/;"	m	struct:mos6502	typeref:typename:uint8_t
ypos	emu/include/nes/ppu.h	/^	uint8_t ypos;$/;"	m	struct:ppu_sprite	typeref:typename:uint8_t
z	emu/include/mos6502/mos6502.h	/^		bool z : 1; \/\/ zero flag$/;"	m	struct:stat_reg::__anonfa668a2b0108	typeref:typename:bool:1
